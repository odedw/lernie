{"version":3,"sources":["config/parameterConfig.ts","engine/LFO.ts","engine/runHydra.ts","engine/streams.ts","config/LaunchControlXL.ts","config/lfoConfig.ts","engine/setupMidi.ts","engine/state/defaultSourceState.ts","engine/engine.ts","storage/fileUtils.ts","components/Hydra.tsx","components/Scope.tsx","App.tsx","reportWebVitals.ts","index.tsx","types/Keys.ts","types/index.ts","types/source.ts","types/mapping.ts","types/state.ts"],"names":["config","parameters","mod1","min","max","mod2","mod3","rotation","brightness","pixelate","scale","colorama","modulate","modulateRotate","modulateScale","repeatXY","blend","diff","feedback","selfModulate","colorR","colorG","colorB","contrast","sourceMods","SourceType","osc","noise","voronoi","screen","shape","allParameters","Object","keys","map","k","LFOType","now","require","LFO","rate","type","Sine","snhTimestamp","snhValue","this","sine","Square","square","Triangle","triangle","Saw","saw","ReverseSaw","reverseSaw","SampleAndHold","sampleAndHold","timestamp","Math","random","val","floor","sin","PI","getValueGenerator","ss","p","lfos","time","value","valueRange","forEach","lfo","i","lfoValue","getValue","abs","audio","a","fft","getSource","sb","screenRatio","sourceType","getNoise","getVoronoi","initScreen","src","saturate","invert","luma","getScreen","rotate","getShape","getOsc","runSource","s","sources","o","o1","o2","outputBufferByIndex","s0","s1","sourceBufferByIndex","ms","modSourceByIndex","color","obj","repeat","out","run","state","solid","o0","parameterValueChange$","lfoDestinationValueChange$","audioDestinationValueChange$","clearParameter$","sourceTypeChange$","loadPreset$","savePreset$","keyDown$","keyUp$","resetSource$","selectAudioBin$","lfoRateChange$","lfoTypeChange$","cc","switchSource","note","reset","shift","lfo1","lfo2","presets","lfosControl","lfoConfig","input","Input","create","isNoteMatch","e","name","octave","channel","keyStateMatches","ks","generateKeyRecord","allKeys","every","defaultParams","defaultSourceMods","generateDefaultSourceState","primary","res","SourceState","engine","ranAudio","keyState","savePreset","bind","loadPreset","getSourceType","mapping","then","streams","merge","index","noteOn","pipe","filter","ccObservables","m","sourceIndex","flatMap","lfoIndex","parameter","destination","divisor","length","control","some","find","noteOff","findIndex","setupMidi","subscribe","Number","SourceTypeValues","includes","defaultState","navigator","mediaDevices","getDisplayMedia","video","desktopStream","desktopSource","context","createMediaStreamSource","setSmooth","meyda","setSource","startsWith","key","cloneSourceState","rerun","preset","gsap","to","duration","data","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","JSON","stringify","moment","format","file","Promise","resolve","reject","reader","FileReader","addEventListener","event","target","result","readAsText","loadFile","str","parse","err","console","error","catch","Hydra","Canvas","styled","canvas","canvasRef","useRef","useState","hasRun","setHasRun","useEffect","current","w","window","innerWidth","h","innerHeight","width","height","setResolution","id","ref","Container","div","LFOContainer","TextContainer","Text","timers","Scope","enabled","text1","setText1","text2","setText2","show","useCallback","text","force","setText","clearTimeout","setTimeout","sub","toString","toFixed","unsubscribe","className","FileDrop","App","scopeEnabled","setScopeEnabled","initialized","setInitialized","evt","toLowerCase","saveProject","getElementById","randomize","init","accept","onChange","files","loadProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","isNaN","reduce","c","generateZeroParametersRecord","record"],"mappings":"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","file":"static/js/main.80194440.chunk.js","sourcesContent":["import { Parameter, SourceType } from '../types';\n\nexport type Range = {\n  min: number;\n  max: number;\n};\nexport type ParameterConfig = {\n  parameters: Record<Parameter, Range>;\n  sourceMods: Record<SourceType, Record<'mod1' | 'mod2' | 'mod3', Range>>;\n};\n\nexport const config: ParameterConfig = {\n  parameters: {\n    mod1: { min: 0, max: 80 },\n    mod2: { min: -0.5, max: 0.5 },\n    mod3: { min: 0, max: 10 },\n    rotation: { min: 0, max: 6.283185307179586 },\n    brightness: { min: -1, max: 1 },\n    pixelate: { min: 10, max: 1500 },\n    scale: { min: 0.5, max: 7 },\n    colorama: { min: -0.001, max: 1 },\n    modulate: { min: -1, max: 1 },\n    modulateRotate: { min: -10, max: 10 },\n    modulateScale: { min: -10, max: 10 },\n    repeatXY: { min: 1, max: 8 },\n    blend: { min: 0, max: 1 },\n    diff: { min: 0, max: 1 },\n    feedback: { min: 0, max: 1 },\n    selfModulate: { min: 0, max: 1 },\n    colorR: { min: 0, max: 1 },\n    colorG: { min: 0, max: 1 },\n    colorB: { min: 0, max: 1 },\n    contrast: { min: 0, max: 20 },\n  },\n  sourceMods: {\n    [SourceType.osc]: {\n      mod1: { min: 0, max: 100 },\n      mod2: { min: -1, max: 1 },\n      mod3: { min: 0, max: 6.3 },\n    },\n    [SourceType.noise]: {\n      mod1: { min: 0, max: 1 },\n      mod2: { min: 0, max: 0.5 },\n      mod3: { min: 0, max: 10 },\n    },\n    [SourceType.voronoi]: {\n      mod1: { min: 0, max: 80 },\n      mod2: { min: 0, max: 10 },\n      mod3: { min: 0, max: 20 },\n    },\n    [SourceType.screen]: {\n      mod1: { min: 0, max: 50 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: 0, max: 1 },\n    },\n    [SourceType.shape]: {\n      mod1: { min: 1, max: 20 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: -100, max: 100 },\n    },\n  },\n};\n\nexport const allParameters = Object.keys(config.parameters).map((k) => k as Parameter);\n","const now = require('right-now');\n\nexport enum LFOType {\n  Sine = 0,\n  Square,\n  Triangle,\n  Saw,\n  ReverseSaw,\n  SampleAndHold,\n}\nexport class LFO {\n  rate: number = 1000;\n  type: LFOType = LFOType.Sine;\n  snhTimestamp?: number;\n  snhValue: number = 0;\n  // constructor() {}\n\n  getValue(): number {\n    switch (this.type) {\n      case LFOType.Sine:\n        return this.sine();\n      case LFOType.Square:\n        return this.square();\n      case LFOType.Triangle:\n        return this.triangle();\n      case LFOType.Saw:\n        return this.saw();\n      case LFOType.ReverseSaw:\n        return this.reverseSaw();\n      case LFOType.SampleAndHold:\n        return this.sampleAndHold();\n    }\n  }\n  sampleAndHold() {\n    const timestamp = now();\n    if (!this.snhTimestamp || timestamp - this.snhTimestamp > this.rate) {\n      this.snhTimestamp = timestamp;\n      this.snhValue = Math.random();\n    }\n    return this.snhValue;\n  }\n  reverseSaw() {\n    return (now() % this.rate) / this.rate;\n  }\n  saw() {\n    return 1 - (now() % this.rate) / this.rate;\n  }\n  triangle() {\n    const val = now() % this.rate;\n    return val <= this.rate / 2 ? val / (this.rate / 2) : (this.rate - val) / (this.rate / 2);\n  }\n  square() {\n    return Math.floor((now() / this.rate) % 2);\n  }\n  sine() {\n    return (Math.sin((now() * 2 * Math.PI) / this.rate) + 1) / 2; // 0 to 1\n  }\n}\n","import { SourceState, SourceType, HydraStream, State, Parameter, CallbackObject, SourceBuffer } from '../types';\nimport { LFO } from './LFO';\nimport { config } from '../config/parameterConfig';\n\n// eslint-disable-next-line\nfunction debug(val: number): number {\n  console.log(val);\n  return val;\n}\n\nfunction getValueGenerator(ss: SourceState, p: Parameter, lfos: LFO[]): (co: CallbackObject) => number {\n  return ({ time }) => {\n    let value = ss.parameters[p];\n    const valueRange = config.parameters[p].max - config.parameters[p].min;\n\n    lfos.forEach((lfo, i) => {\n      // add lfo\n      const lfoValue = ss.lfos[i][p] < 0 ? 1 - lfo.getValue() : lfo.getValue();\n      value += lfoValue * Math.abs(ss.lfos[i][p]) * valueRange;\n    });\n\n    // add audio\n    value += ss.audio[p] * valueRange * a.fft[0];\n\n    // clamp\n    value = Math.min(Math.max(config.parameters[p].min, value), config.parameters[p].max);\n    return value;\n  };\n}\n\nfunction getOsc(ss: SourceState, lfos: LFO[]): HydraStream {\n  return osc(\n    getValueGenerator(ss, 'mod1', lfos),\n    getValueGenerator(ss, 'mod2', lfos),\n    getValueGenerator(ss, 'mod3', lfos)\n  );\n  // .kaleid(() => ss.parameters.kaleid);\n}\n\nfunction getNoise(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return noise(80, getValueGenerator(ss, 'mod1', lfos))\n    .scale(1, 1, screenRatio)\n    .contrast(getValueGenerator(ss, 'mod2', lfos));\n  // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n}\n\nfunction getVoronoi(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return voronoi(100, getValueGenerator(ss, 'mod1', lfos), getValueGenerator(ss, 'mod2', lfos)).scale(\n    1,\n    1,\n    screenRatio\n  );\n  // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n}\n\nfunction getScreen(ss: SourceState, sb: SourceBuffer, screenRatio: number, lfos: LFO[]): HydraStream {\n  sb.initScreen();\n  return src(sb)\n    .saturate(getValueGenerator(ss, 'mod1', lfos))\n    .invert(getValueGenerator(ss, 'mod3', lfos))\n    .luma(getValueGenerator(ss, 'mod2', lfos), 0);\n  // .color(\n  //   getValueGenerator(ss, 'mod1', lfos),\n  //   getValueGenerator(ss, 'mod2', lfos),\n  //   getValueGenerator(ss, 'mod3', lfos)\n  // )\n}\n\nfunction getShape(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return shape(getValueGenerator(ss, 'mod1', lfos), getValueGenerator(ss, 'mod2', lfos))\n    .scale(1, 1, screenRatio)\n    .rotate(({ time }) => ((time * ss.parameters.mod3) % 360) * (Math.PI / 180));\n}\n\nfunction getSource(ss: SourceState, sb: SourceBuffer, screenRatio: number, lfos: LFO[]): HydraStream {\n  switch (ss.sourceType) {\n    case SourceType.noise:\n      return getNoise(ss, screenRatio, lfos);\n    case SourceType.voronoi:\n      return getVoronoi(ss, screenRatio, lfos);\n    case SourceType.screen:\n      return getScreen(ss, sb, screenRatio, lfos);\n    case SourceType.shape:\n      return getShape(ss, screenRatio, lfos);\n    default:\n      return getOsc(ss, lfos);\n  }\n}\n\nconst outputBufferByIndex = (i: number) => [o1, o2][i];\nconst modSourceByIndex = (i: number) => [o2, o1][i];\nconst sourceBufferByIndex = (i: number) => [s0, s1][i];\n\nexport function runSource(s: State, i: number, screenRatio: number, lfos: LFO[]) {\n  const ss = s.sources[i];\n  const o = outputBufferByIndex(i);\n  const sb = sourceBufferByIndex(i);\n  const ms = modSourceByIndex(i);\n\n  const source = getSource(ss, sb, screenRatio, lfos);\n  source\n    .blend(o, getValueGenerator(ss, 'feedback', lfos))\n    .rotate(getValueGenerator(ss, 'rotation', lfos), 0)\n    .color(\n      getValueGenerator(ss, 'colorR', lfos),\n      getValueGenerator(ss, 'colorG', lfos),\n      getValueGenerator(ss, 'colorB', lfos)\n    )\n    .contrast(getValueGenerator(ss, 'contrast', lfos))\n    .pixelate(\n      (obj) => getValueGenerator(ss, 'pixelate', lfos)(obj) * screenRatio,\n      getValueGenerator(ss, 'pixelate', lfos)\n    )\n    .scale(getValueGenerator(ss, 'scale', lfos))\n    .colorama(getValueGenerator(ss, 'colorama', lfos))\n    .modulate(src(ms), getValueGenerator(ss, 'modulate', lfos))\n    .modulateRotate(\n      src(ms),\n      getValueGenerator(ss, 'modulateRotate', lfos),\n      getValueGenerator(ss, 'modulateRotate', lfos)\n    )\n    .modulateScale(src(ms), getValueGenerator(ss, 'modulateScale', lfos))\n    .modulate(o, getValueGenerator(ss, 'selfModulate', lfos))\n    .repeat(getValueGenerator(ss, 'repeatXY', lfos), getValueGenerator(ss, 'repeatXY', lfos))\n    .brightness(getValueGenerator(ss, 'brightness', lfos))\n    .out(o);\n}\nexport default function run(state: State, screenRatio: number, lfos: LFO[]) {\n  runSource(state, 0, screenRatio, lfos);\n  runSource(state, 1, screenRatio, lfos);\n\n  solid(0, 0, 0, 0)\n    .blend(src(o1), getValueGenerator(state.sources[0], 'blend', lfos))\n    .blend(src(o2), getValueGenerator(state.sources[1], 'blend', lfos))\n    .diff(solid(0, 0, 0, 0).blend(src(o1), getValueGenerator(state.sources[0], 'diff', lfos)))\n    .diff(solid(0, 0, 0, 0).blend(src(o2), getValueGenerator(state.sources[1], 'diff', lfos)))\n    .out(o0);\n}\n\nexport function runAudio() {\n  // @ts-ignore\n  navigator.mediaDevices.getDisplayMedia({ video: true, audio: true }).then((desktopStream) => {\n    // @ts-ignore\n    const desktopSource = a.context.createMediaStreamSource(desktopStream);\n    a.setSmooth(0.5);\n    // @ts-ignore\n    a.meyda.setSource(desktopSource);\n  });\n\n  // a.show();\n}\n","import { Observable } from 'rxjs';\nimport { Parameter, SourceType } from '../types';\nimport { Key } from '../types/Keys';\nimport { LFOType } from './LFO';\n\nexport type ParameterValueChangeEvent = {\n  parameter: Parameter;\n  value: number;\n  sourceIndex: number;\n};\n\nexport type ClearParameterEvent = {\n  parameter: Parameter;\n  sourceIndex: number;\n  destination?: 'lfo1' | 'lfo2' | 'audio';\n};\n\nexport type AudioDestinationValueChange = ParameterValueChangeEvent;\n\nexport type LfoDestinationValueChange = ParameterValueChangeEvent & {\n  lfoIndex: number;\n};\n\nexport type SourceTypeChange = {\n  sourceIndex: number;\n  type: SourceType;\n};\n\nexport type LFORateChangeEvent = {\n  lfoIndex: number;\n  rate: number;\n};\n\nexport type LFOTypeChangeEvent = {\n  lfoIndex: number;\n  type: LFOType;\n};\n\nexport class Streams {\n  parameterValueChange$!: Observable<ParameterValueChangeEvent>;\n  lfoDestinationValueChange$!: Observable<LfoDestinationValueChange>;\n  audioDestinationValueChange$!: Observable<LfoDestinationValueChange>;\n  clearParameter$!: Observable<ClearParameterEvent>;\n  sourceTypeChange$!: Observable<number>;\n  loadPreset$!: Observable<number>;\n  savePreset$!: Observable<number>;\n  keyDown$!: Observable<Key>;\n  keyUp$!: Observable<Key>;\n  resetSource$!: Observable<number>;\n  selectAudioBin$!: Observable<number>;\n  lfoRateChange$!: Observable<LFORateChangeEvent>;\n  lfoTypeChange$!: Observable<LFOTypeChangeEvent>;\n}\n\nexport default new Streams();\n","import { Mapping } from '../types';\n\nconst config: Mapping = {\n  sources: [\n    {\n      parameters: {\n        blend: { cc: 77 },\n        diff: { cc: 78 },\n        feedback: { cc: 79 },\n        selfModulate: { cc: 80 },\n        mod1: { cc: 13 },\n        mod2: { cc: 14 },\n        mod3: { cc: 15 },\n        brightness: { cc: 16 },\n        rotation: { cc: 29 },\n        pixelate: { cc: 30 },\n        scale: { cc: 31 },\n        colorama: { cc: 32 },\n        modulate: { cc: 49 },\n        modulateRotate: { cc: 50 },\n        modulateScale: { cc: 51 },\n        repeatXY: { cc: 52 },\n        colorR: { cc: 37 },\n        colorG: { cc: 38 },\n        colorB: { cc: 39 },\n        contrast: { cc: 40 },\n      },\n      switchSource: { note: 'F2' },\n      reset: { note: 'F#2' },\n    },\n    {\n      parameters: {\n        blend: { cc: 81 },\n        diff: { cc: 82 },\n        feedback: { cc: 83 },\n        selfModulate: { cc: 84 },\n        mod1: { cc: 17 },\n        mod2: { cc: 18 },\n        mod3: { cc: 19 },\n        brightness: { cc: 20 },\n        rotation: { cc: 33 },\n        pixelate: { cc: 34 },\n        scale: { cc: 35 },\n        colorama: { cc: 36 },\n        modulate: { cc: 53 },\n        modulateRotate: { cc: 54 },\n        modulateScale: { cc: 55 },\n        repeatXY: { cc: 56 },\n        colorR: { cc: 41 },\n        colorG: { cc: 42 },\n        colorB: { cc: 43 },\n        contrast: { cc: 44 },\n      },\n      switchSource: { note: 'A3' },\n      reset: { note: 'A#3' },\n    },\n  ],\n  keys: {\n    shift: { note: 'A7' },\n    lfo1: { note: 'B7' },\n    lfo2: { note: 'C8' },\n    audio: { note: 'A#7' },\n  },\n  presets: [\n    { note: 'C#5' },\n    { note: 'D5' },\n    { note: 'D#5' },\n    { note: 'E5' },\n    { note: 'F6' },\n    { note: 'F#6' },\n    { note: 'G6' },\n    { note: 'G#6' },\n  ],\n  lfosControl: [\n    {\n      rate: { cc: 85 },\n      type: { cc: 86 },\n    },\n    {\n      rate: { cc: 89 },\n      type: { cc: 90 },\n    },\n  ],\n};\n\nexport default config;\n","export const lfoConfig = {\n  rate: { min: 100, max: 10000 },\n};\n","import { Input } from 'rmidi';\nimport { config } from '../config/parameterConfig';\nimport { generateKeyRecord, Parameter, SourceType } from '../types';\nimport mapping from '../config/LaunchControlXL';\nimport { merge } from 'rxjs';\nimport streams, {\n  ClearParameterEvent,\n  LfoDestinationValueChange,\n  LFORateChangeEvent,\n  LFOTypeChangeEvent,\n  ParameterValueChangeEvent,\n} from './streams';\nimport { filter, map } from 'rxjs/operators';\nimport { allKeys, Key, KeyState } from '../types/Keys';\nimport { InputEventControlchange } from 'webmidi';\nimport { LFOType } from './LFO';\nimport { lfoConfig } from '../config/lfoConfig';\n\nlet input = Input.create('Launch Control XL');\n\nconst isNoteMatch = (p: { note: string; channel?: number }, e: { note: { name: any; octave: any }; channel: any }) =>\n  p.note === `${e.note.name}${e.note.octave}` && (!p.channel || p.channel === e.channel);\n\nconst keyStateMatches = (ks: KeyState, keys: Record<Key, boolean> = generateKeyRecord()): boolean => {\n  return allKeys.every((k) => keys[k] === ks[k]);\n};\n\nexport function setupMidi(getSourceType: (i: number) => SourceType, keyState: KeyState): Promise<void> {\n  const allParameters = Object.keys(mapping.sources[0].parameters).map((k) => k as Parameter);\n\n  // listInputs();\n  return input.then((i) => {\n    // reset\n    streams.resetSource$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.reset.note, mapping.reset.channel).pipe(\n          filter(() => !keyState.audio),\n          map(() => index)\n        )\n      )\n    );\n\n    streams.selectAudioBin$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.switchSource.note, mapping.switchSource.channel).pipe(\n          filter(() => keyState.audio),\n          map(() => index)\n        )\n      )\n    );\n\n    // switchSource\n    streams.sourceTypeChange$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.switchSource.note, mapping.switchSource.channel).pipe(\n          filter(() => keyStateMatches(keyState, generateKeyRecord())),\n          map(() => index)\n        )\n      )\n    );\n    const ccObservables = mapping.sources\n      .map((m, sourceIndex) =>\n        allParameters.map((p) =>\n          i.cc(m.parameters[p].cc, m.parameters[p].channel).pipe(map((e) => ({ e, sourceIndex, p, m })))\n        )\n      )\n      .flatMap((a) => a);\n\n    // LFOs\n    streams.lfoDestinationValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(\n            () =>\n              keyStateMatches(keyState, generateKeyRecord(['lfo1'])) ||\n              keyStateMatches(keyState, generateKeyRecord(['lfo2']))\n          ),\n          map(({ e, sourceIndex, p }) => {\n            const lfoIndex = keyState.lfo1 ? 0 : 1;\n            // // send LFO to param\n            const value = -1 + (2 * e.value) / 127; // between -1 and 1\n            return { value, parameter: p, sourceIndex, lfoIndex } as LfoDestinationValueChange;\n          })\n        )\n      )\n    );\n\n    // Parameter change\n    streams.parameterValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyStateMatches(keyState)),\n\n          map(({ e, sourceIndex, p }) => {\n            const { min, max } = // mod1/2/3 change between source types\n              p === 'mod1' || p === 'mod2' || p === 'mod3'\n                ? config.sourceMods[getSourceType(sourceIndex)][p]\n                : config.parameters[p];\n            const unit = (max - min) / 127;\n            const value = min + unit * e.value;\n            return { value, parameter: p, sourceIndex } as ParameterValueChangeEvent;\n          })\n        )\n      )\n    );\n\n    // Audio reactivity\n    streams.audioDestinationValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyState.audio && !keyState.shift),\n          map(({ e, sourceIndex, p }) => {\n            const value = e.value / 127; // between 0 and 1\n            return { value, parameter: p, sourceIndex } as LfoDestinationValueChange;\n          })\n        )\n      )\n    );\n\n    // Clear parameter\n    streams.clearParameter$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyState.shift),\n          map(({ sourceIndex, p }) => {\n            const destination = keyState.lfo1 ? 'lfo1' : keyState.lfo2 ? 'lfo2' : keyState.audio ? 'audio' : null;\n            return { parameter: p, sourceIndex, destination } as ClearParameterEvent;\n          })\n        )\n      )\n    );\n    // lfo control\n    const numOfLfoTypes = Object.keys(LFOType).length / 2;\n    const divisor = 128 / numOfLfoTypes;\n    streams.lfoTypeChange$ = merge(\n      ...mapping.lfosControl.map((control, lfoIndex) =>\n        i.cc(control.type.cc, control.type.channel).pipe(\n          map<InputEventControlchange, LFOTypeChangeEvent>((e) => ({ lfoIndex, type: Math.floor(e.value / divisor) }))\n        )\n      )\n    );\n\n    streams.lfoRateChange$ = merge(\n      ...mapping.lfosControl.map((control, lfoIndex) =>\n        i.cc(control.rate.cc, control.rate.channel).pipe(\n          map<InputEventControlchange, LFORateChangeEvent>((e) => ({\n            lfoIndex,\n            rate: lfoConfig.rate.min + Math.floor(((lfoConfig.rate.max - lfoConfig.rate.min) * e.value) / 127),\n          }))\n        )\n      )\n    );\n\n    // keys\n    const noteOn = i.noteOn();\n    const allKeys = Object.keys(mapping.keys).map((k) => k as Key);\n\n    streams.keyDown$ = noteOn.pipe(\n      filter((e) => allKeys.some((k) => isNoteMatch(mapping.keys[k], e))),\n      map((e) => allKeys.find((k) => isNoteMatch(mapping.keys[k], e))!)\n    );\n    streams.keyUp$ = i.noteOff().pipe(\n      filter((e) => allKeys.some((k) => isNoteMatch(mapping.keys[k], e))),\n      map((e) => allKeys.find((k) => isNoteMatch(mapping.keys[k], e))!)\n    );\n    streams.loadPreset$ = noteOn.pipe(\n      filter((e) => mapping.presets.some((p) => isNoteMatch(p, e))),\n      map((e) => mapping.presets.findIndex((p) => isNoteMatch(p, e)))\n    );\n    streams.savePreset$ = noteOn.pipe(\n      filter((e) => keyState.shift && mapping.presets.some((p) => isNoteMatch(p, e))),\n      map((e) => mapping.presets.findIndex((p) => isNoteMatch(p, e)))\n    );\n\n    // debug\n    // i.noteOn().subscribe((e) => {\n    //   console.log(`${e.note.name}${e.note.octave}`);\n    // });\n  });\n}\n","import { Parameter, SourceState, SourceType } from '../../types';\nconst defaultParams: Record<Parameter, number> = {\n  rotation: 0,\n  // kaleid: 1,\n  brightness: 0,\n  pixelate: 1500,\n  scale: 1,\n  colorama: 0,\n  modulate: 0,\n  modulateRotate: 0,\n  modulateScale: 0,\n  repeatXY: 1,\n  blend: 1,\n  diff: 0,\n  feedback: 0,\n  selfModulate: 0,\n  colorR: 1,\n  colorG: 1,\n  colorB: 1,\n  contrast: 1,\n  mod1: 0,\n  mod2: 0,\n  mod3: 0,\n};\nconst defaultSourceMods = {\n  [SourceType.osc]: {\n    mod1: 40,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.noise]: {\n    mod1: 0,\n    mod2: 0.8,\n    mod3: 0,\n  },\n  [SourceType.voronoi]: {\n    mod1: 0,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.screen]: {\n    mod1: 1,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.shape]: {\n    mod1: 3,\n    mod2: 0.3,\n    mod3: 0,\n  },\n};\nexport const generateDefaultSourceState = (sourceType: SourceType, primary: boolean = true): SourceState => {\n  const res = new SourceState(\n    {\n      ...defaultParams,\n      ...defaultSourceMods[sourceType],\n    },\n    sourceType\n  );\n  res.parameters.blend = primary ? res.parameters.blend : 0;\n  return res;\n};\n","import gsap from 'gsap';\nimport moment from 'moment';\nimport { config, allParameters } from '../config/parameterConfig';\nimport { downloadObjectAsJson, loadFile } from '../storage';\nimport { Parameter, SourceState, SourceType, SourceTypeValues, State } from '../types';\nimport { LFO } from './LFO';\nimport run, { runAudio, runSource } from './runHydra';\nimport streams from './streams';\nimport { setupMidi } from './setupMidi';\nimport { generateDefaultSourceState } from './state/defaultSourceState';\nimport { KeyState } from '../types/Keys';\n\nexport class Engine {\n  state: State;\n  screenRatio: number = 1;\n  lfos = [new LFO(), new LFO()];\n  ranAudio = false;\n  keyState: KeyState = {\n    lfo1: false,\n    lfo2: false,\n    shift: false,\n    audio: false,\n  };\n\n  constructor() {\n    this.state = {\n      sources: [generateDefaultSourceState(SourceType.osc), generateDefaultSourceState(SourceType.osc, false)],\n      presets: [],\n    };\n    this.savePreset = this.savePreset.bind(this);\n    this.loadPreset = this.loadPreset.bind(this);\n  }\n  init(): Promise<any> {\n    return setupMidi((i) => this.state.sources[i].sourceType, this.keyState).then(() => {\n      // subscriptions\n      streams.savePreset$.subscribe((i) => this.savePreset(i));\n      streams.loadPreset$.subscribe((i) => this.loadPreset(i));\n      streams.sourceTypeChange$.subscribe((index) => {\n        const ss = this.state.sources[index];\n        ss.sourceType = ((Number(ss.sourceType) + 1) % SourceTypeValues.length) as SourceType;\n\n        const defaultParams = generateDefaultSourceState(ss.sourceType).parameters;\n        allParameters\n          .filter((p) => !['blend', 'diff'].includes(p))\n          .forEach((p) => (ss.parameters[p as Parameter] = defaultParams[p as Parameter]));\n        runSource(this.state, index, this.screenRatio, this.lfos);\n      });\n      streams.keyDown$.subscribe((e) => (this.keyState[e] = true));\n      streams.keyUp$.subscribe((e) => (this.keyState[e] = false));\n      streams.parameterValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].parameters[e.parameter] = e.value)\n      );\n      streams.lfoDestinationValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].lfos[e.lfoIndex][e.parameter] = e.value)\n      );\n      streams.audioDestinationValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].audio[e.parameter] = e.value)\n      );\n      streams.resetSource$.subscribe((index) => {\n        const ss = this.state.sources[index];\n        const defaultState = generateDefaultSourceState(ss.sourceType);\n        // copy parameters default state\n        allParameters.forEach((p) => {\n          ss.parameters[p] = defaultState.parameters[p];\n          ss.lfos.forEach((lfo) => (lfo[p] = 0));\n        });\n      });\n      streams.clearParameter$.subscribe((e) => {\n        const ss = this.state.sources[e.sourceIndex];\n        if (e.destination === 'lfo1') {\n          ss.lfos[0][e.parameter] = 0;\n        } else if (e.destination === 'lfo2') {\n          ss.lfos[1][e.parameter] = 0;\n        } else if (e.destination === 'audio') {\n          ss.audio[e.parameter] = 0;\n        } else {\n          ss.parameters[e.parameter] = generateDefaultSourceState(ss.sourceType).parameters[e.parameter];\n        }\n      });\n\n      streams.selectAudioBin$.subscribe((e) => {\n        if (!this.ranAudio) {\n          this.ranAudio = true;\n          runAudio();\n        }\n      });\n\n      streams.lfoTypeChange$.subscribe((e) => (this.lfos[e.lfoIndex].type = e.type));\n      streams.lfoRateChange$.subscribe((e) => (this.lfos[e.lfoIndex].rate = e.rate));\n    });\n\n    // debug\n    // merge(\n    //   engine.scopeSubjects.sourceTypeChange,\n    //   engine.scopeSubjects.parameterChange,\n\n    //   engine.scopeSubjects.loadPreset,\n    //   engine.scopeSubjects.savePreset\n    // ).subscribe((e) => console.log(e));\n  }\n  run(screenRatio?: number) {\n    if (screenRatio) {\n      this.screenRatio = screenRatio;\n    }\n    run(this.state, this.screenRatio, this.lfos);\n  }\n  randomize() {\n    allParameters.forEach((k) => {\n      if (k.startsWith('modulate')) {\n        return;\n      }\n      if (Math.random() < 0.5) {\n        const key = k as Parameter;\n        this.state.sources[0].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n        this.state.sources[1].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n      }\n    });\n  }\n\n  savePreset(index: number) {\n    this.state.presets[index] = [\n      this.cloneSourceState(this.state.sources[0]),\n      this.cloneSourceState(this.state.sources[1]),\n    ];\n  }\n\n  loadPreset(index: number) {\n    if (!this.state.presets[index] || this.state.presets[index].length !== this.state.sources.length) {\n      return;\n    }\n    const rerun = this.state.presets[index].some((p, i) => p.sourceType !== this.state.sources[i].sourceType);\n    this.state.sources.forEach((s, i) => {\n      const preset = this.state.presets[index][i];\n      s.sourceType = preset.sourceType;\n      gsap.to(s.parameters, {\n        ...preset.parameters,\n        duration: 0.001,\n        repeat: 0,\n      });\n    });\n    if (rerun) {\n      run(this.state, this.screenRatio, this.lfos);\n    }\n  }\n\n  saveProject() {\n    downloadObjectAsJson(JSON.stringify(this.state, null, 2), moment().format('YYYY-MM-DD_hh-mm-ss'));\n  }\n\n  loadProject(file: File) {\n    loadFile(file)\n      .then((str) => {\n        try {\n          const state = JSON.parse(str) as State;\n          this.state = state;\n          run(this.state, this.screenRatio, this.lfos);\n        } catch (err) {\n          console.error('failed to parse file', err);\n        }\n      })\n      .catch((err) => {\n        console.error('failed to read file', err);\n      });\n  }\n\n  private cloneSourceState(s: SourceState): SourceState {\n    return new SourceState({ ...s.parameters }, s.sourceType);\n  }\n}\n\nexport const engine = new Engine();\n","export function loadFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', (event) => {\n      resolve(event.target?.result as string);\n    });\n    reader.readAsText(file);\n  });\n}\n\nexport function downloadObjectAsJson(data: string, name: string) {\n  var dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(data);\n  var downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { engine } from '../engine';\nconst Hydra = require('hydra-synth');\n\nconst Canvas = styled.canvas`\n  height: 100%;\n  width: 100%;\n`;\n\nexport default () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [hasRun, setHasRun] = useState(false);\n  useEffect(() => {\n    if (canvasRef.current && !hasRun) {\n      const w = window.innerWidth;\n      const h = window.innerHeight;\n      canvasRef.current.width = w;\n      canvasRef.current.height = h;\n      const hydra = new Hydra({\n        canvas: canvasRef.current,\n        // makeGlobal: false,\n        //   precision: 'highp',\n      });\n      hydra.setResolution(w, h);\n      engine.run(w / h);\n      setHasRun(false);\n    }\n  }, [canvasRef, hasRun]);\n\n  return <Canvas id=\"hydra-canvas\" ref={canvasRef} />;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport streams from '../engine/streams';\nimport { SourceType } from '../types';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { engine } from '../engine';\nimport { LFOType } from '../engine/LFO';\n// import LFO from './LFO';\n\nconst Container = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  bottom: 20vh;\n  font-size: 5vh;\n  text-shadow: 2px 2px 2px #111;\n  // -webkit-text-stroke-width: 2px;\n  // -webkit-text-stroke-color: #111;\n\n  .text-1 {\n    color: #dcf;\n  }\n  .text-2 {\n    color: #dfc;\n  }\n`;\nconst LFOContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n`;\nconst TextContainer = styled.div`\n  top: 66vh;\n  position: absolute;\n  margin: auto;\n  left: 0;\n  right: 0;\n`;\nconst Text = styled.div``;\nlet timers: NodeJS.Timeout[] = [];\ntype Props = {\n  enabled: boolean;\n};\nconst Scope: React.FC<Props> = ({ enabled }) => {\n  const [text1, setText1] = useState('');\n  const [text2, setText2] = useState('');\n  // const [lfo1Value, setLfo1Value] = useState<number>(0);\n\n  const show = useCallback(\n    (text: string, force: boolean = false) => {\n      const index = text.startsWith('2 - ') ? 1 : 0;\n      const setText = [setText1, setText2][index];\n\n      if (!enabled && !force) {\n        return;\n      }\n      setText(text);\n      if (timers[index]) {\n        clearTimeout(timers[index]);\n      }\n      timers[index] = setTimeout(() => {\n        setText('');\n      }, 1000);\n    },\n    [setText1, setText2, enabled]\n  );\n  useEffect(() => {\n    const sub = merge(\n      streams.sourceTypeChange$.pipe(\n        map(\n          (sourceIndex) => `${sourceIndex + 1} - ${SourceType[engine.state.sources[sourceIndex].sourceType].toString()}`\n        )\n      ),\n      streams.parameterValueChange$.pipe(map((e) => `${e.sourceIndex + 1} - ${e.parameter}: ${e.value.toFixed(2)}`)),\n      streams.lfoDestinationValueChange$.pipe(\n        map((e) => `${e.sourceIndex + 1} - LFO ${e.lfoIndex + 1} - ${e.parameter}: ${Math.floor(e.value * 100)}%`)\n      ),\n      streams.audioDestinationValueChange$.pipe(\n        map((e) => `${e.sourceIndex + 1} - Audio - ${e.parameter}: ${Math.floor(e.value * 100)}%`)\n      ),\n      streams.loadPreset$.pipe(map((i) => `Load preset ${i + 1}`)),\n      streams.savePreset$.pipe(map((i) => `Save preset ${i + 1}`)),\n      streams.clearParameter$.pipe(\n        map((e) => `${e.sourceIndex + 1} ${e.destination ? `- ${e.destination}` : ''}- ${e.parameter} cleared`)\n      ),\n      streams.lfoTypeChange$.pipe(map((e) => `LFO ${e.lfoIndex + 1} - ${LFOType[e.type]}`)),\n      streams.lfoRateChange$.pipe(\n        map(\n          (e) => `LFO ${e.lfoIndex + 1} - ${e.rate < 1000 ? `${e.rate} ms` : `${(e.rate / 1000).toFixed(2)} seconds`}`\n        )\n      )\n    ).subscribe(show);\n    return () => sub.unsubscribe();\n  }, [show]);\n  useEffect(() => {\n    show(`Scope ${enabled ? 'on' : 'off'}`, true);\n  }, [enabled, show]);\n  // useEffect(() => {\n  //   setLfo1Value(engine.lfos[0].getValue());\n  // });\n  return (\n    <Container>\n      <TextContainer>\n        <Text className=\"text-1\">{text1}</Text>\n        <Text className=\"text-2\">{text2}</Text>\n      </TextContainer>\n      <LFOContainer>{/* <LFO value={lfo1Value} /> */}</LFOContainer>\n    </Container>\n  );\n};\nexport default Scope;\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.css';\nimport Hydra from './components/Hydra';\nimport styled from 'styled-components';\nimport { engine } from './engine/engine';\nimport Scope from './components/Scope';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nfunction loadFile(evt: ChangeEvent<HTMLInputElement>) {\n  if (evt.target.files && evt.target.files?.length > 0) {\n    engine.loadProject(evt.target.files[0]);\n  }\n}\nconst FileDrop = styled.input`\n  display: none;\n`;\n\nfunction App() {\n  const [scopeEnabled, setScopeEnabled] = useState(true);\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    function keyPress(evt: KeyboardEvent) {\n      const k = evt.key.toLowerCase();\n      if (k === 's') {\n        engine.saveProject();\n      } else if (k === 'l') {\n        document.getElementById('file-selector')?.click();\n      } else if (k === 'r') {\n        engine.randomize();\n      } else if (k === 'i') {\n        setScopeEnabled((enabled) => !enabled);\n      }\n    }\n\n    window.addEventListener('keypress', keyPress);\n  }, [setScopeEnabled]);\n  useEffect(() => {\n    engine.init().then(() => setInitialized(true));\n  }, [setInitialized]);\n  if (!initialized) {\n    return null;\n  }\n  return (\n    <Container>\n      <Hydra />\n      <Scope enabled={scopeEnabled} />\n      <FileDrop type=\"file\" id=\"file-selector\" accept=\".json\" onChange={(e) => loadFile(e)} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export type Key = 'shift' | 'lfo1' | 'lfo2' | 'audio';\nexport type KeyState = Record<Key, boolean>;\n\nexport const allKeys: Key[] = ['shift', 'lfo1', 'lfo2', 'audio'];\n","export * from './hydra';\nexport * from './source';\nexport * from './mapping';\nexport * from './state';\nexport * from './parameters';\n","export enum SourceType {\n  osc = 0,\n  noise,\n  voronoi,\n  shape,\n  screen,\n}\n\nexport const SourceTypeValues = Object.keys(SourceType).filter((k) => isNaN(Number(k)));\n","import { allKeys, Key } from './Keys';\nimport { Parameter } from './parameters';\n\nexport type MidiCCBinding = {\n  cc: number;\n  channel?: number;\n};\n\nexport type MidiNoteBinding = {\n  note: string;\n  channel?: number;\n};\nexport type SourceMapping = {\n  parameters: Record<Parameter, MidiCCBinding>;\n  // buttons\n  switchSource: MidiNoteBinding;\n  reset: MidiNoteBinding;\n};\nexport type LFOControl = {\n  type: MidiCCBinding;\n  rate: MidiCCBinding;\n};\nexport type Mapping = {\n  sources: [SourceMapping, SourceMapping];\n  keys: Record<Key, MidiNoteBinding>;\n  lfosControl: [LFOControl, LFOControl];\n  presets: [\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding\n  ];\n};\n\nexport function generateKeyRecord(keys: Key[] = []): Record<Key, boolean> {\n  return allKeys.reduce<Record<Key, boolean>>((p, c) => {\n    p[c] = keys.includes(c);\n    return p;\n  }, {} as Record<Key, boolean>);\n}\n","import { SourceType } from './source';\nimport { Parameter } from './parameters';\nimport { allParameters } from '../config/parameterConfig';\n\nexport class SourceState {\n  parameters!: Record<Parameter, number>;\n  sourceType!: SourceType;\n  lfos!: Record<Parameter, number>[];\n  audio!: Record<Parameter, number>;\n  constructor(parameters: Record<Parameter, number>, sourceType: SourceType) {\n    this.parameters = parameters;\n    this.sourceType = sourceType;\n    this.lfos = [this.generateZeroParametersRecord(), this.generateZeroParametersRecord()];\n    this.audio = this.generateZeroParametersRecord();\n  }\n\n  generateZeroParametersRecord() {\n    const record = { ...this.parameters };\n    allParameters.forEach((p) => (record[p] = 0));\n    return record;\n  }\n}\n\nexport type State = {\n  sources: SourceState[];\n  presets: SourceState[][];\n};\n"],"sourceRoot":""}