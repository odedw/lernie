{"version":3,"sources":["config/parameterConfig.ts","engine/LFO.ts","engine/runHydra.ts","engine/streams.ts","engine/state/defaultSourceState.ts","config/LaunchControlXL.ts","engine/setupMidi.ts","engine/engine.ts","storage/fileUtils.ts","components/Hydra.tsx","components/Scope.tsx","App.tsx","reportWebVitals.ts","init.ts","index.tsx","types/index.ts","types/source.ts","types/state.ts"],"names":["config","parameters","mod1","min","max","mod2","mod3","rotation","brightness","pixelate","scale","colorama","modulate","modulateRotate","modulateScale","repeatXY","blend","diff","feedback","selfModulate","sourceMods","SourceType","osc","noise","voronoi","screen","shape","LFO","time","Math","sin","getValueGenerator","ss","p","lfo","lfoValue","getValue","value","abs","runSource","s","i","screenRatio","sources","o","o1","o2","outputBufferByIndex","sb","s0","s1","sourceBufferByIndex","ms","modSourceByIndex","sourceType","contrast","initScreen","src","color","rotate","PI","getSource","repeat","out","run","state","lfo1","solid","o0","parameterChange","Subject","lfoChange","sourceTypeChange","loadPreset","savePreset","defaultParams","defaultSourceMods","generateDefaultSourceState","primary","res","SourceState","cc","switchSource","note","reset","shift","presets","sourceSubscriptions","input","Input","create","bindSource","sourceIndex","mapping","subs","Object","keys","map","k","key","isLfoPressed","channel","subscribe","e","streams","next","parameter","unit","bindParameter","push","noteOn","Number","SourceTypeValues","length","filter","includes","forEach","type","defaultState","setupSources","unsubscribe","then","bindBoolean","noteOff","engine","this","bind","preset","index","startsWith","random","cloneSourceState","rerun","some","gsap","to","duration","data","name","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","JSON","stringify","moment","format","file","Promise","resolve","reject","reader","FileReader","addEventListener","event","target","result","readAsText","loadFile","str","parse","err","console","error","catch","Hydra","require","Canvas","styled","canvas","canvasRef","useRef","useState","hasRun","setHasRun","useEffect","current","w","window","innerWidth","h","innerHeight","width","height","setResolution","id","ref","Container","div","Text","timers","Scope","enabled","text1","setText1","text2","setText2","show","useCallback","text","force","setText","clearTimeout","setTimeout","sub","merge","pipe","toString","toFixed","floor","className","FileDrop","App","scopeEnabled","setScopeEnabled","evt","toLowerCase","saveProject","getElementById","randomize","accept","onChange","files","loadProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","init","ReactDOM","render","StrictMode","isNaN"],"mappings":"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","file":"static/js/main.5b7b4122.chunk.js","sourcesContent":["import { Parameter, SourceType } from '../types';\n\nexport type Range = {\n  min: number;\n  max: number;\n};\nexport type ParameterConfig = {\n  parameters: Record<Parameter, Range>;\n  sourceMods: Record<SourceType, Record<'mod1' | 'mod2' | 'mod3', Range>>;\n};\n\nexport const config: ParameterConfig = {\n  parameters: {\n    mod1: { min: 0, max: 80 },\n    mod2: { min: -0.5, max: 0.5 },\n    mod3: { min: 0, max: 10 },\n    rotation: { min: 0, max: 6.283185307179586 },\n    brightness: { min: -1, max: 1 },\n    pixelate: { min: 10, max: 1500 },\n    scale: { min: 0.5, max: 7 },\n    colorama: { min: -0.001, max: 1 },\n    modulate: { min: -1, max: 1 },\n    modulateRotate: { min: -10, max: 10 },\n    modulateScale: { min: -10, max: 10 },\n    repeatXY: { min: 1, max: 8 },\n    blend: { min: 0, max: 1 },\n    diff: { min: 0, max: 1 },\n    feedback: { min: 0, max: 1 },\n    selfModulate: { min: 0, max: 1 },\n  },\n  sourceMods: {\n    [SourceType.osc]: {\n      mod1: { min: 0, max: 100 },\n      mod2: { min: -1, max: 1 },\n      mod3: { min: 0, max: 6.3 },\n    },\n    [SourceType.noise]: {\n      mod1: { min: 0, max: 1 },\n      mod2: { min: 0, max: 0.5 },\n      mod3: { min: 0, max: 10 },\n    },\n    [SourceType.voronoi]: {\n      mod1: { min: 0, max: 80 },\n      mod2: { min: 0, max: 10 },\n      mod3: { min: 0, max: 20 },\n    },\n    [SourceType.screen]: {\n      mod1: { min: 0, max: 1 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: 0, max: 1 },\n    },\n    [SourceType.shape]: {\n      mod1: { min: 1, max: 20 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: -100, max: 100 },\n    },\n  },\n};\n","export class LFO {\n  //   constructor() {}\n\n  getValue(time: number) {\n    return (Math.sin(time) + 1) / 2; // 0 to 1\n  }\n}\n","import { SourceState, SourceType, HydraStream, State, Parameter, CallbackObject, SourceBuffer } from '../types';\nimport { LFO } from './LFO';\nimport { config } from '../config/parameterConfig';\n\n// eslint-disable-next-line\nfunction debug(val: number): number {\n  console.log(val);\n  return val;\n}\n\nfunction getValueGenerator(ss: SourceState, p: Parameter, lfo: LFO): (co: CallbackObject) => number {\n  return ({ time }) => {\n    const lfoValue = ss.lfo[p] < 0 ? 1 - lfo.getValue(time) : lfo.getValue(time);\n\n    let value = ss.parameters[p];\n\n    // add lfo\n    value += lfoValue * Math.abs(ss.lfo[p]) * (config.parameters[p].max - config.parameters[p].min);\n    // clamp\n    value = Math.min(Math.max(config.parameters[p].min, value), config.parameters[p].max);\n\n    // if (p === 'blend') {\n    // console.log(value, lfoValue * Math.abs(ss.lfo[p]) * (config.parameters[p].max - config.parameters[p].min));\n    // }\n    return value;\n  };\n}\n\nfunction getSource(ss: SourceState, sb: SourceBuffer, screenRatio: number, lfo: LFO): HydraStream {\n  if (ss.sourceType === SourceType.noise) {\n    return noise(80, getValueGenerator(ss, 'mod1', lfo))\n      .scale(1, 1, screenRatio)\n      .contrast(getValueGenerator(ss, 'mod2', lfo));\n    // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n  } else if (ss.sourceType === SourceType.voronoi) {\n    return voronoi(100, getValueGenerator(ss, 'mod1', lfo), getValueGenerator(ss, 'mod2', lfo)).scale(\n      1,\n      1,\n      screenRatio\n    );\n    // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n  } else if (ss.sourceType === SourceType.screen) {\n    sb.initScreen();\n    return (\n      src(sb)\n        // .saturate(getValueGenerator(ss, 'mod2', lfo))\n        .color(\n          getValueGenerator(ss, 'mod1', lfo),\n          getValueGenerator(ss, 'mod2', lfo),\n          getValueGenerator(ss, 'mod3', lfo)\n        )\n    );\n  } else if (ss.sourceType === SourceType.shape) {\n    return shape(getValueGenerator(ss, 'mod1', lfo), getValueGenerator(ss, 'mod2', lfo))\n      .scale(1, 1, screenRatio)\n      .rotate(({ time }) => ((time * ss.parameters.mod3) % 360) * (Math.PI / 180));\n  } else {\n    return osc(\n      getValueGenerator(ss, 'mod1', lfo),\n      getValueGenerator(ss, 'mod2', lfo),\n      getValueGenerator(ss, 'mod3', lfo)\n    );\n    // .kaleid(() => ss.parameters.kaleid);\n  }\n}\n\nconst outputBufferByIndex = (i: number) => [o1, o2][i];\nconst modSourceByIndex = (i: number) => [o2, o1][i];\nconst sourceBufferByIndex = (i: number) => [s0, s1][i];\n\nexport function runSource(s: State, i: number, screenRatio: number, lfo: LFO) {\n  const ss = s.sources[i];\n  const o = outputBufferByIndex(i);\n  const sb = sourceBufferByIndex(i);\n  const ms = modSourceByIndex(i);\n\n  const source = getSource(ss, sb, screenRatio, lfo);\n  source\n    .blend(o, getValueGenerator(ss, 'feedback', lfo))\n    .rotate(getValueGenerator(ss, 'rotation', lfo), 0)\n    .pixelate(getValueGenerator(ss, 'pixelate', lfo), getValueGenerator(ss, 'pixelate', lfo))\n    .scale(getValueGenerator(ss, 'scale', lfo))\n    .colorama(getValueGenerator(ss, 'colorama', lfo))\n    .modulate(src(ms), getValueGenerator(ss, 'modulate', lfo))\n    .modulateRotate(src(ms), getValueGenerator(ss, 'modulateRotate', lfo), getValueGenerator(ss, 'modulateRotate', lfo))\n    .modulateScale(src(ms), getValueGenerator(ss, 'modulateScale', lfo))\n    .modulate(o, getValueGenerator(ss, 'selfModulate', lfo))\n    .repeat(getValueGenerator(ss, 'repeatXY', lfo), getValueGenerator(ss, 'repeatXY', lfo))\n    .brightness(getValueGenerator(ss, 'brightness', lfo))\n    .out(o);\n}\nexport default function run(state: State, screenRatio: number, lfo1: LFO) {\n  runSource(state, 0, screenRatio, lfo1);\n  runSource(state, 1, screenRatio, lfo1);\n\n  solid(0, 0, 0, 0)\n    .blend(src(o1), getValueGenerator(state.sources[0], 'blend', lfo1))\n    .blend(src(o2), getValueGenerator(state.sources[1], 'blend', lfo1))\n    .diff(solid(0, 0, 0, 0).blend(src(o1), getValueGenerator(state.sources[0], 'diff', lfo1)))\n    .diff(solid(0, 0, 0, 0).blend(src(o2), getValueGenerator(state.sources[1], 'diff', lfo1)))\n    .out(o0);\n}\n","import { Subject } from 'rxjs/internal/Subject';\nimport { Parameter, SourceType } from '../types';\n\nexport type ParameterChangeEvent = {\n  parameter: Parameter;\n  value: number;\n  sourceIndex: number;\n};\n\nexport type SourceTypeChange = {\n  sourceIndex: number;\n  type: SourceType;\n};\n\nexport class Streams {\n  parameterChange = new Subject<ParameterChangeEvent>();\n  lfoChange = new Subject<ParameterChangeEvent>();\n  sourceTypeChange = new Subject<SourceTypeChange>();\n  loadPreset = new Subject<number>();\n  savePreset = new Subject<number>();\n}\n\nexport default new Streams();\n","import { SourceState, SourceType } from '../../types';\nconst defaultParams = {\n  rotation: 0,\n  // kaleid: 1,\n  brightness: 0,\n  pixelate: 1500,\n  scale: 1,\n  colorama: 0,\n  modulate: 0,\n  modulateRotate: 0,\n  modulateScale: 0,\n  repeatXY: 1,\n  blend: 1,\n  diff: 0,\n  feedback: 0,\n  selfModulate: 0,\n};\nconst defaultSourceMods = {\n  [SourceType.osc]: {\n    mod1: 40,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.noise]: {\n    mod1: 0,\n    mod2: 0.8,\n    mod3: 0,\n  },\n  [SourceType.voronoi]: {\n    mod1: 0,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.screen]: {\n    mod1: 1,\n    mod2: 1,\n    mod3: 1,\n  },\n  [SourceType.shape]: {\n    mod1: 3,\n    mod2: 0.3,\n    mod3: 0,\n  },\n};\nexport const generateDefaultSourceState = (sourceType: SourceType, primary: boolean = true): SourceState => {\n  const res = new SourceState(\n    {\n      ...defaultSourceMods[sourceType],\n      ...defaultParams,\n    },\n    sourceType\n  );\n  res.parameters.blend = primary ? res.parameters.blend : 0;\n  return res;\n};\n","import { Mapping } from '../types';\n\nconst config: Mapping = {\n  sources: [\n    {\n      parameters: {\n        blend: { cc: 77 },\n        diff: { cc: 78 },\n        feedback: { cc: 79 },\n        selfModulate: { cc: 80 },\n        mod1: { cc: 13 },\n        mod2: { cc: 14 },\n        mod3: { cc: 15 },\n        brightness: { cc: 16 },\n        rotation: { cc: 29 },\n        pixelate: { cc: 30 },\n        scale: { cc: 31 },\n        colorama: { cc: 32 },\n        modulate: { cc: 49 },\n        modulateRotate: { cc: 50 },\n        modulateScale: { cc: 51 },\n        repeatXY: { cc: 52 },\n      },\n      switchSource: { note: 'F2' },\n      reset: { note: 'F#2' },\n    },\n    {\n      parameters: {\n        blend: { cc: 81 },\n        diff: { cc: 82 },\n        feedback: { cc: 83 },\n        selfModulate: { cc: 84 },\n        mod1: { cc: 17 },\n        mod2: { cc: 18 },\n        mod3: { cc: 19 },\n        brightness: { cc: 20 },\n        rotation: { cc: 33 },\n        pixelate: { cc: 34 },\n        scale: { cc: 35 },\n        colorama: { cc: 36 },\n        modulate: { cc: 53 },\n        modulateRotate: { cc: 54 },\n        modulateScale: { cc: 55 },\n        repeatXY: { cc: 56 },\n      },\n      switchSource: { note: 'A3' },\n      reset: { note: 'A#3' },\n    },\n  ],\n  shift: { note: 'C8' },\n  lfo1: { note: 'B7' },\n  presets: [\n    { note: 'C#5' },\n    { note: 'D5' },\n    { note: 'D#5' },\n    { note: 'E5' },\n    { note: 'F6' },\n    { note: 'F#6' },\n    { note: 'G6' },\n    { note: 'G#6' },\n  ],\n};\n\nexport default config;\n","import { Input } from 'rmidi';\nimport { config } from '../config/parameterConfig';\nimport { Parameter, MidiCCBinding, SourceMapping, SourceType, State, SourceTypeValues } from '../types';\nimport { generateDefaultSourceState } from './state/defaultSourceState';\nimport mapping from '../config/LaunchControlXL';\nimport { Subscription } from 'rxjs';\nimport streams from './streams';\n\nlet sourceSubscriptions: Subscription[] = [];\nlet input = Input.create('Launch Control XL');\n\nfunction bindParameter(\n  i: Input,\n  sourceIndex: number,\n  mapping: MidiCCBinding,\n  p: Parameter,\n  s: State,\n  isLfoPressed: () => boolean\n) {\n  return i.cc(mapping.cc, mapping.channel).subscribe((e) => {\n    const ss = s.sources[sourceIndex];\n    if (isLfoPressed()) {\n      // send LFO to param\n      ss.lfo[p] = -1 + (2 * e.value) / 127; // always between -1 and 1\n      streams.lfoChange.next({ value: ss.lfo[p], parameter: p, sourceIndex });\n    } else {\n      const { min, max } = // mod1/2/3 change between source types\n        p === 'mod1' || p === 'mod2' || p === 'mod3' ? config.sourceMods[ss.sourceType][p] : config.parameters[p];\n      const unit = (max - min) / 127;\n      ss.parameters[p] = min + unit * e.value;\n      streams.parameterChange.next({ value: ss.parameters[p], parameter: p, sourceIndex });\n    }\n  });\n}\n\nfunction bindSource(i: Input, s: State, sourceIndex: number, mapping: SourceMapping) {\n  const ss = s.sources[sourceIndex];\n  const subs = Object.keys(ss.parameters).map((k) => {\n    const key = k as Parameter;\n    return bindParameter(i, sourceIndex, mapping.parameters[key], key, s, () => s.lfo1);\n  });\n\n  // switch source\n  subs.push(\n    i.noteOn(mapping.switchSource.note, mapping.switchSource.channel).subscribe(() => {\n      ss.sourceType = ((Number(ss.sourceType) + 1) % SourceTypeValues.length) as SourceType;\n\n      const defaultParams = generateDefaultSourceState(ss.sourceType).parameters;\n      Object.keys(ss.parameters)\n        .filter((p) => !['blend', 'diff'].includes(p))\n        .forEach((p) => (ss.parameters[p as Parameter] = defaultParams[p as Parameter]));\n      // refreshState();\n\n      streams.sourceTypeChange.next({ type: ss.sourceType, sourceIndex });\n    })\n  );\n\n  // reset\n  subs.push(\n    i.noteOn(mapping.reset.note, mapping.reset.channel).subscribe(() => {\n      const defaultState = generateDefaultSourceState(ss.sourceType);\n      // copy parameters default state\n      Object.keys(ss.parameters).forEach((k) => {\n        const key = k as Parameter;\n        ss.parameters[key] = defaultState.parameters[key];\n      });\n    })\n  );\n\n  return subs;\n}\n\nexport function setupSources(state: State) {\n  // clear previous setup\n  sourceSubscriptions.forEach((s) => s.unsubscribe());\n\n  //midi\n  // listInputs();\n  input.then((i) => {\n    sourceSubscriptions = [\n      ...bindSource(i, state, 0, mapping.sources[0]),\n      ...bindSource(i, state, 1, mapping.sources[1]),\n    ];\n\n    // debug\n    // i.noteOn().subscribe((e) => {\n    //   console.log(`${e.note.name}${e.note.octave}`);\n    // });\n  });\n}\n\nfunction bindBoolean(i: Input, state: State, k: 'lfo1' | 'shift'): Subscription[] {\n  return [\n    i.noteOn(mapping[k].note, mapping[k].channel).subscribe(() => {\n      state[k] = true;\n      // console.log(`${k} down`);\n    }),\n    i.noteOff(mapping[k].note, mapping[k].channel).subscribe(() => {\n      state[k] = false;\n      // console.log(`${k} up`);\n    }),\n  ];\n}\n\nexport function setupPresets(state: State, savePreset: (index: number) => void, loadPreset: (index: number) => void) {\n  input.then((i) => {\n    bindBoolean(i, state, 'shift');\n    bindBoolean(i, state, 'lfo1');\n    mapping.presets.forEach((preset, index) => {\n      i.noteOn(preset.note, preset.channel).subscribe(() => {\n        if (state.shift) {\n          savePreset(index);\n          streams.savePreset.next(index);\n        } else {\n          loadPreset(index);\n          streams.loadPreset.next(index);\n        }\n      });\n    });\n  });\n}\n","import gsap from 'gsap';\nimport moment from 'moment';\nimport { config } from '../config/parameterConfig';\nimport { downloadObjectAsJson, loadFile } from '../storage';\nimport { Parameter, SourceState, SourceType, State } from '../types';\nimport { LFO } from './LFO';\nimport run, { runSource } from './runHydra';\nimport streams from './streams';\nimport { setupSources, setupPresets } from './setupMidi';\nimport { generateDefaultSourceState } from './state/defaultSourceState';\n// import { merge } from 'rxjs';\n\nexport class Engine {\n  state: State;\n  screenRatio: number = 1;\n  lfo1 = new LFO();\n  constructor() {\n    this.state = {\n      sources: [generateDefaultSourceState(SourceType.osc), generateDefaultSourceState(SourceType.osc, false)],\n      presets: [],\n      shift: false,\n      lfo1: false,\n    };\n    this.savePreset = this.savePreset.bind(this);\n    this.loadPreset = this.loadPreset.bind(this);\n  }\n  init() {\n    setupSources(this.state);\n    setupPresets(this.state, this.savePreset, this.loadPreset);\n    streams.sourceTypeChange.subscribe((e) => {\n      runSource(this.state, e.sourceIndex, this.screenRatio, this.lfo1);\n    });\n\n    // debug\n    // merge(\n    //   engine.scopeSubjects.sourceTypeChange,\n    //   engine.scopeSubjects.parameterChange,\n\n    //   engine.scopeSubjects.loadPreset,\n    //   engine.scopeSubjects.savePreset\n    // ).subscribe((e) => console.log(e));\n  }\n  run(screenRatio?: number) {\n    if (screenRatio) {\n      this.screenRatio = screenRatio;\n    }\n    run(this.state, this.screenRatio, this.lfo1);\n  }\n  randomize() {\n    Object.keys(this.state.sources[0].parameters).forEach((k) => {\n      if (k.startsWith('modulate')) {\n        return;\n      }\n      if (Math.random() < 0.5) {\n        const key = k as Parameter;\n        this.state.sources[0].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n        this.state.sources[1].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n      }\n    });\n  }\n\n  savePreset(index: number) {\n    this.state.presets[index] = [\n      this.cloneSourceState(this.state.sources[0]),\n      this.cloneSourceState(this.state.sources[1]),\n    ];\n  }\n\n  loadPreset(index: number) {\n    if (!this.state.presets[index] || this.state.presets[index].length !== this.state.sources.length) {\n      return;\n    }\n    const rerun = this.state.presets[index].some((p, i) => p.sourceType !== this.state.sources[i].sourceType);\n    this.state.sources.forEach((s, i) => {\n      const preset = this.state.presets[index][i];\n      s.sourceType = preset.sourceType;\n      gsap.to(s.parameters, {\n        ...preset.parameters,\n        duration: 0.001,\n        repeat: 0,\n      });\n    });\n    if (rerun) {\n      run(this.state, this.screenRatio, this.lfo1);\n    }\n  }\n\n  saveProject() {\n    downloadObjectAsJson(JSON.stringify(this.state, null, 2), moment().format('YYYY-MM-DD_hh-mm-ss'));\n  }\n\n  loadProject(file: File) {\n    loadFile(file)\n      .then((str) => {\n        try {\n          const state = JSON.parse(str) as State;\n          this.state = state;\n          setupSources(this.state);\n          run(this.state, this.screenRatio, this.lfo1);\n        } catch (err) {\n          console.error('failed to parse file', err);\n        }\n      })\n      .catch((err) => {\n        console.error('failed to read file', err);\n      });\n  }\n\n  private cloneSourceState(s: SourceState): SourceState {\n    return new SourceState({ ...s.parameters }, s.sourceType);\n  }\n}\n\nexport const engine = new Engine();\n","\nexport function loadFile(file: File): Promise<string> {\n  // Check if the file is an image.\n  //   if (file.type && file.type.indexOf('json') === -1) {\n  // console.log('File is not a project file.', file.type, file);\n  // return;\n  //   }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', (event) => {\n      resolve(event.target?.result as string);\n    });\n    reader.readAsText(file);\n  });\n}\n\nexport function downloadObjectAsJson(data: string, name: string) {\n  var dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(data);\n  var downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { engine } from '../engine';\nconst Hydra = require('hydra-synth');\n\nconst Canvas = styled.canvas`\n  height: 100%;\n  width: 100%;\n`;\n\nexport default () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [hasRun, setHasRun] = useState(false);\n  useEffect(() => {\n    if (canvasRef.current && !hasRun) {\n      const w = window.innerWidth;\n      const h = window.innerHeight;\n      canvasRef.current.width = w;\n      canvasRef.current.height = h;\n      const hydra = new Hydra({\n        canvas: canvasRef.current,\n        // makeGlobal: false,\n        //   precision: 'highp',\n      });\n      hydra.setResolution(w, h);\n      engine.run(w / h);\n      setHasRun(false);\n    }\n  }, [canvasRef, hasRun]);\n\n  return <Canvas id=\"hydra-canvas\" ref={canvasRef} />;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport streams from '../engine/streams';\nimport { SourceType } from '../types';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst Container = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  text-align: center;\n  bottom: 20vh;\n  font-size: 5vh;\n  text-shadow: 2px 2px 2px #111;\n  // -webkit-text-stroke-width: 2px;\n  // -webkit-text-stroke-color: #111;\n\n  .text-1 {\n    color: #dcf;\n  }\n  .text-2 {\n    color: #dfc;\n  }\n`;\nconst Text = styled.div``;\nlet timers: NodeJS.Timeout[] = [];\ntype Props = {\n  enabled: boolean;\n};\nconst Scope: React.FC<Props> = ({ enabled }) => {\n  const [text1, setText1] = useState('');\n  const [text2, setText2] = useState('');\n  const show = useCallback(\n    (text: string, force: boolean = false) => {\n      const index = text.startsWith('2 - ') ? 1 : 0;\n      const setText = [setText1, setText2][index];\n\n      if (!enabled && !force) {\n        return;\n      }\n      setText(text);\n      if (timers[index]) {\n        clearTimeout(timers[index]);\n      }\n      timers[index] = setTimeout(() => {\n        setText('');\n      }, 1000);\n    },\n    [setText1, setText2, enabled]\n  );\n  useEffect(() => {\n    const sub = merge(\n      streams.sourceTypeChange.pipe(map((e) => `${e.sourceIndex + 1} - ${SourceType[e.type].toString()}`)),\n      streams.parameterChange.pipe(map((e) => `${e.sourceIndex + 1} - ${e.parameter}: ${e.value.toFixed(2)}`)),\n      streams.lfoChange.pipe(map((e) => `${e.sourceIndex + 1} - LFO - ${e.parameter}: ${Math.floor(e.value * 100)}%`)),\n      streams.loadPreset.pipe(map((i) => `Load preset ${i + 1}`)),\n      streams.savePreset.pipe(map((i) => `Save preset ${i + 1}`))\n    ).subscribe(show);\n    return () => sub.unsubscribe();\n  }, [show]);\n  useEffect(() => {\n    show(`Scope ${enabled ? 'on' : 'off'}`, true);\n  }, [enabled, show]);\n  return (\n    <Container>\n      <Text className=\"text-1\">{text1}</Text>\n      <Text className=\"text-2\">{text2}</Text>\n    </Container>\n  );\n};\nexport default Scope;\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.css';\nimport Hydra from './components/Hydra';\nimport styled from 'styled-components';\nimport { engine } from './engine/engine';\nimport Scope from './components/Scope';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nfunction loadFile(evt: ChangeEvent<HTMLInputElement>) {\n  if (evt.target.files && evt.target.files?.length > 0) {\n    engine.loadProject(evt.target.files[0]);\n  }\n}\nconst FileDrop = styled.input`\n  display: none;\n`;\n\nfunction App() {\n  const [scopeEnabled, setScopeEnabled] = useState(true);\n\n  useEffect(() => {\n    function keyPress(evt: KeyboardEvent) {\n      const k = evt.key.toLowerCase();\n      if (k === 's') {\n        engine.saveProject();\n      } else if (k === 'l') {\n        document.getElementById('file-selector')?.click();\n      } else if (k === 'r') {\n        engine.randomize();\n      } else if (k === 'i') {\n        setScopeEnabled((enabled) => !enabled);\n      }\n    }\n\n    window.addEventListener('keypress', keyPress);\n  }, [setScopeEnabled]);\n\n  return (\n    <Container>\n      <Hydra />\n      <Scope enabled={scopeEnabled} />\n      <FileDrop type=\"file\" id=\"file-selector\" accept=\".json\" onChange={(e) => loadFile(e)} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { engine } from \"./engine\";\n\nexport default function init(){\n    engine.init();\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport init from './init';\n\ninit();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from './hydra';\nexport * from './source';\nexport * from './mapping';\nexport * from './state';\nexport * from './parameters';\n","\n\nexport enum SourceType {\n  osc = 0,\n  noise,\n  voronoi,\n  shape,\n  screen,\n}\n\nexport const SourceTypeValues = Object.keys(SourceType).filter((k) => isNaN(Number(k)));\n","import { SourceType } from './source';\nimport { Parameter } from './parameters';\n\nexport class SourceState {\n  parameters!: Record<Parameter, number>;\n  sourceType!: SourceType;\n  lfo!: Record<Parameter, number>;\n  constructor(parameters: Record<Parameter, number>, sourceType: SourceType) {\n    this.parameters = parameters;\n    this.sourceType = sourceType;\n    this.lfo = { ...parameters };\n    Object.keys(this.lfo).forEach((k) => (this.lfo[k as Parameter] = 0));\n  }\n}\n\nexport type State = {\n  sources: SourceState[];\n  presets: SourceState[][];\n  shift: boolean;\n  lfo1: boolean;\n};\n"],"sourceRoot":""}