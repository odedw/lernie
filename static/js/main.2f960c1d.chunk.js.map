{"version":3,"sources":["types/source.ts","types/Keys.ts","types/mapping.ts","types/state.ts","config/parameterConfig.ts","engine/LFO.ts","storage/storageWrapper.ts","engine/streams.ts","storage/settings.ts","engine/runHydra.ts","config/LaunchControlXL.ts","config/lfoConfig.ts","engine/setupMidi.ts","engine/state/defaultSourceState.ts","engine/engine.ts","storage/fileUtils.ts","components/Hydra.tsx","components/Scope.tsx","components/Settings/SectionHeader.tsx","components/Settings.tsx","init.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SourceType","SourceTypeValues","Object","keys","filter","k","isNaN","Number","allKeys","generateKeyRecord","reduce","p","c","includes","SourceState","parameters","sourceType","lfos","audio","this","generateZeroParametersRecord","record","allParameters","forEach","config","mod1","min","max","mod2","mod3","rotation","brightness","pixelate","scale","colorama","modulate","modulateRotate","modulateScale","repeatXY","blend","diff","feedback","selfModulate","colorR","colorG","colorB","contrast","sourceMods","osc","noise","voronoi","screen","shape","map","LFOType","storage","MIDI_INPUT","key","localStorage","getItem","value","setItem","parameterValueChange$","lfoDestinationValueChange$","audioDestinationValueChange$","clearParameter$","sourceTypeChange$","loadPreset$","savePreset$","keyDown$","keyUp$","resetSource$","selectAudioBin$","lfoRateChange$","lfoTypeChange$","lifecycle","engine","initialized$","ReplaySubject","settings","midiInputChanged$","_midiInput","midiInput","get","undefined","inputName","set","streams","next","now","require","LFO","rate","type","Sine","snhTimestamp","snhValue","sine","Square","square","Triangle","triangle","Saw","saw","ReverseSaw","reverseSaw","SampleAndHold","sampleAndHold","timestamp","Math","random","val","floor","sin","PI","getValueGenerator","ss","time","valueRange","lfo","i","lfoValue","getValue","abs","a","fft","getSource","sb","screenRatio","getNoise","getVoronoi","initScreen","src","saturate","invert","luma","getScreen","rotate","getShape","getOsc","runSource","s","sources","o","o1","o2","o3","o4","outputBufferByIndex","s0","s1","s2","s3","sourceBufferByIndex","ms","modSourceByIndex","color","obj","repeat","out","run","state","solid","o0","cc","switchSource","note","reset","shift","lfo1","lfo2","presets","lfosControl","lfoConfig","isNoteMatch","e","name","octave","channel","keyStateMatches","ks","every","setupMidi","getSourceType","keyState","input","Input","create","mapping","then","merge","index","noteOn","pipe","ccObservables","m","sourceIndex","flatMap","lfoIndex","parameter","destination","divisor","length","control","some","find","noteOff","findIndex","defaultParams","defaultSourceMods","generateDefaultSourceState","primary","res","subscriptions","ranAudio","savePreset","bind","loadPreset","subscribe","startsWith","cloneSourceState","rerun","preset","data","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","JSON","stringify","moment","format","file","Promise","resolve","reject","reader","FileReader","addEventListener","event","target","result","readAsText","loadFile","str","parse","err","console","error","catch","unsubscribe","defaultState","navigator","mediaDevices","getDisplayMedia","video","desktopStream","desktopSource","context","createMediaStreamSource","setSmooth","meyda","setSource","setBins","Hydra","Canvas","styled","canvas","canvasRef","useRef","useState","hasRun","setHasRun","useEffect","current","w","window","innerWidth","h","innerHeight","width","height","numOutputs","setResolution","id","ref","Container","div","LFOContainer","TextContainer","Text","timers","Scope","enabled","text1","setText1","text2","setText2","change$","setChange$","show","useCallback","text","force","setText","clearTimeout","setTimeout","sub","toString","toFixed","className","HeaderText","Separator","SectionHeader","props","children","MidiInputItem","MidiInputSelectionContainer","Settings","React","selectedInput","setSelectedInput","WebMidi","inputs","checked","onChange","htmlFor","midiInit","init","FileDrop","App","scopeEnabled","setScopeEnabled","settingsOpen","setSettingsOpen","initialized","setInitialized","evt","toLowerCase","saveProject","getElementById","randomize","accept","files","loadProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f960c1d.chunk.js","sourcesContent":["export enum SourceType {\n  osc = 0,\n  noise,\n  voronoi,\n  shape,\n  screen,\n}\n\nexport const SourceTypeValues = Object.keys(SourceType).filter((k) => isNaN(Number(k)));\n","export type Key = 'shift' | 'lfo1' | 'lfo2' | 'audio';\nexport type KeyState = Record<Key, boolean>;\n\nexport const allKeys: Key[] = ['shift', 'lfo1', 'lfo2', 'audio'];\n","import { allKeys, Key } from './Keys';\nimport { Parameter } from './parameters';\n\nexport type MidiCCBinding = {\n  cc: number;\n  channel?: number;\n};\n\nexport type MidiNoteBinding = {\n  note: string;\n  channel?: number;\n};\nexport type SourceMapping = {\n  parameters: Record<Parameter, MidiCCBinding>;\n  // buttons\n  switchSource: MidiNoteBinding;\n  reset: MidiNoteBinding;\n};\nexport type LFOControl = {\n  type: MidiCCBinding;\n  rate: MidiCCBinding;\n};\nexport type Mapping = {\n  sources: [SourceMapping, SourceMapping, SourceMapping, SourceMapping];\n  keys: Record<Key, MidiNoteBinding>;\n  lfosControl: [LFOControl, LFOControl];\n  presets: [\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding,\n    MidiNoteBinding\n  ];\n};\n\nexport function generateKeyRecord(keys: Key[] = []): Record<Key, boolean> {\n  return allKeys.reduce<Record<Key, boolean>>((p, c) => {\n    p[c] = keys.includes(c);\n    return p;\n  }, {} as Record<Key, boolean>);\n}\n","import { SourceType } from './source';\nimport { Parameter } from './parameters';\nimport { allParameters } from '../config/parameterConfig';\n\nexport class SourceState {\n  parameters!: Record<Parameter, number>;\n  sourceType!: SourceType;\n  lfos!: Record<Parameter, number>[];\n  audio!: Record<Parameter, number>;\n  constructor(parameters: Record<Parameter, number>, sourceType: SourceType) {\n    this.parameters = parameters;\n    this.sourceType = sourceType;\n    this.lfos = [this.generateZeroParametersRecord(), this.generateZeroParametersRecord()];\n    this.audio = this.generateZeroParametersRecord();\n  }\n\n  generateZeroParametersRecord() {\n    const record = { ...this.parameters };\n    allParameters.forEach((p) => (record[p] = 0));\n    return record;\n  }\n}\n\nexport type State = {\n  sources: SourceState[];\n  presets: SourceState[][];\n};\n","import { Parameter, SourceType } from '../types';\n\nexport type Range = {\n  min: number;\n  max: number;\n};\nexport type ParameterConfig = {\n  parameters: Record<Parameter, Range>;\n  sourceMods: Record<SourceType, Record<'mod1' | 'mod2' | 'mod3', Range>>;\n};\n\nexport const config: ParameterConfig = {\n  parameters: {\n    mod1: { min: 0, max: 80 },\n    mod2: { min: -0.5, max: 0.5 },\n    mod3: { min: 0, max: 10 },\n    rotation: { min: 0, max: 6.283185307179586 },\n    brightness: { min: -1, max: 1 },\n    pixelate: { min: 10, max: 1500 },\n    scale: { min: 0.5, max: 7 },\n    colorama: { min: -0.001, max: 1 },\n    modulate: { min: -1, max: 1 },\n    modulateRotate: { min: -10, max: 10 },\n    modulateScale: { min: -10, max: 10 },\n    repeatXY: { min: 1, max: 8 },\n    blend: { min: 0, max: 1 },\n    diff: { min: 0, max: 1 },\n    feedback: { min: 0, max: 1 },\n    selfModulate: { min: 0, max: 1 },\n    colorR: { min: 0, max: 1 },\n    colorG: { min: 0, max: 1 },\n    colorB: { min: 0, max: 1 },\n    contrast: { min: 0, max: 20 },\n  },\n  sourceMods: {\n    [SourceType.osc]: {\n      mod1: { min: 0, max: 100 },\n      mod2: { min: -1, max: 1 },\n      mod3: { min: 0, max: 6.3 },\n    },\n    [SourceType.noise]: {\n      mod1: { min: 0, max: 1 },\n      mod2: { min: 0, max: 0.5 },\n      mod3: { min: 0, max: 10 },\n    },\n    [SourceType.voronoi]: {\n      mod1: { min: 0, max: 80 },\n      mod2: { min: 0, max: 10 },\n      mod3: { min: 0, max: 20 },\n    },\n    [SourceType.screen]: {\n      mod1: { min: 0, max: 50 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: 0, max: 1 },\n    },\n    [SourceType.shape]: {\n      mod1: { min: 1, max: 20 },\n      mod2: { min: 0, max: 1 },\n      mod3: { min: -100, max: 100 },\n    },\n  },\n};\n\nexport const allParameters = Object.keys(config.parameters).map((k) => k as Parameter);\n","const now = require('right-now');\n\nexport enum LFOType {\n  Sine = 0,\n  Square,\n  Triangle,\n  Saw,\n  ReverseSaw,\n  SampleAndHold,\n}\nexport class LFO {\n  rate: number = 1000;\n  type: LFOType = LFOType.Sine;\n  snhTimestamp?: number;\n  snhValue: number = 0;\n  // constructor() {}\n\n  getValue(): number {\n    switch (this.type) {\n      case LFOType.Sine:\n        return this.sine();\n      case LFOType.Square:\n        return this.square();\n      case LFOType.Triangle:\n        return this.triangle();\n      case LFOType.Saw:\n        return this.saw();\n      case LFOType.ReverseSaw:\n        return this.reverseSaw();\n      case LFOType.SampleAndHold:\n        return this.sampleAndHold();\n    }\n  }\n  sampleAndHold() {\n    const timestamp = now();\n    if (!this.snhTimestamp || timestamp - this.snhTimestamp > this.rate) {\n      this.snhTimestamp = timestamp;\n      this.snhValue = Math.random();\n    }\n    return this.snhValue;\n  }\n  reverseSaw() {\n    return (now() % this.rate) / this.rate;\n  }\n  saw() {\n    return 1 - (now() % this.rate) / this.rate;\n  }\n  triangle() {\n    const val = now() % this.rate;\n    return val <= this.rate / 2 ? val / (this.rate / 2) : (this.rate - val) / (this.rate / 2);\n  }\n  square() {\n    return Math.floor((now() / this.rate) % 2);\n  }\n  sine() {\n    return (Math.sin((now() * 2 * Math.PI) / this.rate) + 1) / 2; // 0 to 1\n  }\n}\n","class Storage {\n  keys = {\n    MIDI_INPUT: 'MIDI_INPUT',\n  };\n  get(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  set(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n}\n\nexport const storage = new Storage();\n","import { Observable, ReplaySubject } from 'rxjs';\nimport { Parameter, SourceType } from '../types';\nimport { Key } from '../types/Keys';\nimport { LFOType } from './LFO';\n\nexport type ParameterValueChangeEvent = {\n  parameter: Parameter;\n  value: number;\n  sourceIndex: number;\n};\n\nexport type ClearParameterEvent = {\n  parameter: Parameter;\n  sourceIndex: number;\n  destination?: 'lfo1' | 'lfo2' | 'audio';\n};\n\nexport type AudioDestinationValueChange = ParameterValueChangeEvent;\n\nexport type LfoDestinationValueChange = ParameterValueChangeEvent & {\n  lfoIndex: number;\n};\n\nexport type SourceTypeChange = {\n  sourceIndex: number;\n  type: SourceType;\n};\n\nexport type LFORateChangeEvent = {\n  lfoIndex: number;\n  rate: number;\n};\n\nexport type LFOTypeChangeEvent = {\n  lfoIndex: number;\n  type: LFOType;\n};\n\nexport class Streams {\n  parameterValueChange$!: Observable<ParameterValueChangeEvent>;\n  lfoDestinationValueChange$!: Observable<LfoDestinationValueChange>;\n  audioDestinationValueChange$!: Observable<LfoDestinationValueChange>;\n  clearParameter$!: Observable<ClearParameterEvent>;\n  sourceTypeChange$!: Observable<number>;\n  loadPreset$!: Observable<number>;\n  savePreset$!: Observable<number>;\n  keyDown$!: Observable<Key>;\n  keyUp$!: Observable<Key>;\n  resetSource$!: Observable<number>;\n  selectAudioBin$!: Observable<number>;\n  lfoRateChange$!: Observable<LFORateChangeEvent>;\n  lfoTypeChange$!: Observable<LFOTypeChangeEvent>;\n\n  lifecycle = {\n    engine: {\n      initialized$: new ReplaySubject(1),\n    },\n    settings: {\n      midiInputChanged$: new ReplaySubject<string>(1),\n    },\n  };\n}\n\nexport default new Streams();\n","import streams from '../engine/streams';\nimport { storage } from './storageWrapper';\n\nclass Settings {\n  private _midiInput: string | undefined;\n  init() {\n    this.midiInput = storage.get(storage.keys.MIDI_INPUT) || undefined;\n  }\n\n  public get midiInput(): string | undefined {\n    return this._midiInput;\n  }\n\n  public set midiInput(inputName: string | undefined) {\n    this._midiInput = inputName;\n    if (inputName) {\n      storage.set(storage.keys.MIDI_INPUT, inputName);\n    }\n    streams.lifecycle.settings.midiInputChanged$.next(inputName);\n  }\n}\n\nexport const settings = new Settings();\n","import { SourceState, SourceType, HydraStream, State, Parameter, CallbackObject, SourceBuffer } from '../types';\nimport { LFO } from './LFO';\nimport { config } from '../config/parameterConfig';\n\n// eslint-disable-next-line\nfunction debug(val: number): number {\n  console.log(val);\n  return val;\n}\n\nfunction getValueGenerator(ss: SourceState, p: Parameter, lfos: LFO[]): (co: CallbackObject) => number {\n  return ({ time }) => {\n    let value = ss.parameters[p];\n    const valueRange = config.parameters[p].max - config.parameters[p].min;\n\n    lfos.forEach((lfo, i) => {\n      // add lfo\n      const lfoValue = ss.lfos[i][p] < 0 ? 1 - lfo.getValue() : lfo.getValue();\n      value += lfoValue * Math.abs(ss.lfos[i][p]) * valueRange;\n    });\n\n    // add audio\n    value += ss.audio[p] * valueRange * a.fft[0];\n\n    // clamp\n    value = Math.min(Math.max(config.parameters[p].min, value), config.parameters[p].max);\n    return value;\n  };\n}\n\nfunction getOsc(ss: SourceState, lfos: LFO[]): HydraStream {\n  return osc(\n    getValueGenerator(ss, 'mod1', lfos),\n    getValueGenerator(ss, 'mod2', lfos),\n    getValueGenerator(ss, 'mod3', lfos)\n  );\n  // .kaleid(() => ss.parameters.kaleid);\n}\n\nfunction getNoise(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return noise(80, getValueGenerator(ss, 'mod1', lfos))\n    .scale(1, 1, screenRatio)\n    .contrast(getValueGenerator(ss, 'mod2', lfos));\n  // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n}\n\nfunction getVoronoi(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return voronoi(100, getValueGenerator(ss, 'mod1', lfos), getValueGenerator(ss, 'mod2', lfos)).scale(\n    1,\n    1,\n    screenRatio\n  );\n  // .kaleid(getValueGenerator(ss, 'kaleid', lfo));\n}\n\nfunction getScreen(ss: SourceState, sb: SourceBuffer, screenRatio: number, lfos: LFO[]): HydraStream {\n  sb.initScreen();\n  return src(sb)\n    .saturate(getValueGenerator(ss, 'mod1', lfos))\n    .invert(getValueGenerator(ss, 'mod3', lfos))\n    .luma(getValueGenerator(ss, 'mod2', lfos), 0);\n}\n\nfunction getShape(ss: SourceState, screenRatio: number, lfos: LFO[]): HydraStream {\n  return shape(getValueGenerator(ss, 'mod1', lfos), getValueGenerator(ss, 'mod2', lfos))\n    .scale(1, 1, screenRatio)\n    .rotate(({ time }) => ((time * ss.parameters.mod3) % 360) * (Math.PI / 180));\n}\n\nfunction getSource(ss: SourceState, sb: SourceBuffer, screenRatio: number, lfos: LFO[]): HydraStream {\n  switch (ss.sourceType) {\n    case SourceType.noise:\n      return getNoise(ss, screenRatio, lfos);\n    case SourceType.voronoi:\n      return getVoronoi(ss, screenRatio, lfos);\n    case SourceType.screen:\n      return getScreen(ss, sb, screenRatio, lfos);\n    case SourceType.shape:\n      return getShape(ss, screenRatio, lfos);\n    default:\n      return getOsc(ss, lfos);\n  }\n}\n\nconst outputBufferByIndex = (i: number) => [o1, o2, o3, o4][i];\nconst modSourceByIndex = (i: number) => [o2, o1, o4, o3][i];\nconst sourceBufferByIndex = (i: number) => [s0, s1, s2, s3][i];\n\nexport function runSource(s: State, i: number, screenRatio: number, lfos: LFO[]) {\n  const ss = s.sources[i];\n  const o = outputBufferByIndex(i);\n  const sb = sourceBufferByIndex(i);\n  const ms = modSourceByIndex(i);\n\n  const source = getSource(ss, sb, screenRatio, lfos);\n  source\n    .blend(o, getValueGenerator(ss, 'feedback', lfos))\n    .rotate(getValueGenerator(ss, 'rotation', lfos), 0)\n    .color(\n      getValueGenerator(ss, 'colorR', lfos),\n      getValueGenerator(ss, 'colorG', lfos),\n      getValueGenerator(ss, 'colorB', lfos)\n    )\n    .contrast(getValueGenerator(ss, 'contrast', lfos))\n    .pixelate(\n      (obj) => getValueGenerator(ss, 'pixelate', lfos)(obj) * screenRatio,\n      getValueGenerator(ss, 'pixelate', lfos)\n    )\n    .scale(getValueGenerator(ss, 'scale', lfos))\n    .colorama(getValueGenerator(ss, 'colorama', lfos))\n    .modulate(src(ms), getValueGenerator(ss, 'modulate', lfos))\n    .modulateRotate(\n      src(ms),\n      getValueGenerator(ss, 'modulateRotate', lfos),\n      getValueGenerator(ss, 'modulateRotate', lfos)\n    )\n    .modulateScale(src(ms), getValueGenerator(ss, 'modulateScale', lfos))\n    .modulate(o, getValueGenerator(ss, 'selfModulate', lfos))\n    .repeat(getValueGenerator(ss, 'repeatXY', lfos), getValueGenerator(ss, 'repeatXY', lfos))\n    .brightness(getValueGenerator(ss, 'brightness', lfos))\n    .out(o);\n}\nexport default function run(state: State, screenRatio: number, lfos: LFO[]) {\n  runSource(state, 0, screenRatio, lfos);\n  runSource(state, 1, screenRatio, lfos);\n  runSource(state, 2, screenRatio, lfos);\n  runSource(state, 3, screenRatio, lfos);\n\n  solid(0, 0, 0, 0)\n    .blend(src(o1), getValueGenerator(state.sources[0], 'blend', lfos))\n    .blend(src(o2), getValueGenerator(state.sources[1], 'blend', lfos))\n    .diff(solid(0, 0, 0, 0).blend(src(o1), getValueGenerator(state.sources[0], 'diff', lfos)))\n    .diff(solid(0, 0, 0, 0).blend(src(o2), getValueGenerator(state.sources[1], 'diff', lfos)))\n    .blend(src(o3), getValueGenerator(state.sources[2], 'blend', lfos))\n    .blend(src(o4), getValueGenerator(state.sources[3], 'blend', lfos))\n    .diff(solid(0, 0, 0, 0).blend(src(o1), getValueGenerator(state.sources[2], 'diff', lfos)))\n    .diff(solid(0, 0, 0, 0).blend(src(o2), getValueGenerator(state.sources[3], 'diff', lfos)))\n    .out(o0);\n}\n\nexport function runAudio() {\n  // @ts-ignore\n  navigator.mediaDevices.getDisplayMedia({ video: true, audio: true }).then((desktopStream) => {\n    // @ts-ignore\n    const desktopSource = a.context.createMediaStreamSource(desktopStream);\n    a.setSmooth(0.5);\n    // @ts-ignore\n    a.meyda.setSource(desktopSource);\n    a.setBins(10);\n  });\n\n  // a.show();\n}\n","import { Mapping } from '../types';\n\nconst config: Mapping = {\n  sources: [\n    {\n      // 1\n      parameters: {\n        blend: { cc: 1 },\n        diff: { cc: 2 },\n        feedback: { cc: 3 },\n        selfModulate: { cc: 4 },\n        mod1: { cc: 5 },\n        mod2: { cc: 6 },\n        mod3: { cc: 7 },\n        brightness: { cc: 8 },\n        rotation: { cc: 9 },\n        pixelate: { cc: 10 },\n        scale: { cc: 11 },\n        colorama: { cc: 12 },\n        modulate: { cc: 13 },\n        modulateRotate: { cc: 14 },\n        modulateScale: { cc: 15 },\n        repeatXY: { cc: 16 },\n        colorR: { cc: 17 },\n        colorG: { cc: 18 },\n        colorB: { cc: 19 },\n        contrast: { cc: 20 },\n      },\n      switchSource: { note: 'F2' },\n      reset: { note: 'F#2' },\n    },\n    {\n      //2\n      parameters: {\n        blend: { cc: 21 },\n        diff: { cc: 22 },\n        feedback: { cc: 23 },\n        selfModulate: { cc: 24 },\n        mod1: { cc: 25 },\n        mod2: { cc: 26 },\n        mod3: { cc: 27 },\n        brightness: { cc: 28 },\n        rotation: { cc: 29 },\n        pixelate: { cc: 30 },\n        scale: { cc: 31 },\n        colorama: { cc: 32 },\n        modulate: { cc: 33 },\n        modulateRotate: { cc: 34 },\n        modulateScale: { cc: 35 },\n        repeatXY: { cc: 36 },\n        colorR: { cc: 37 },\n        colorG: { cc: 38 },\n        colorB: { cc: 39 },\n        contrast: { cc: 40 },\n      },\n      switchSource: { note: 'A3' },\n      reset: { note: 'A#3' },\n    },\n    {\n      // 3\n      parameters: {\n        blend: { cc: 41 },\n        diff: { cc: 42 },\n        feedback: { cc: 43 },\n        selfModulate: { cc: 44 },\n        mod1: { cc: 45 },\n        mod2: { cc: 46 },\n        mod3: { cc: 47 },\n        brightness: { cc: 48 },\n        rotation: { cc: 49 },\n        pixelate: { cc: 50 },\n        scale: { cc: 51 },\n        colorama: { cc: 52 },\n        modulate: { cc: 53 },\n        modulateRotate: { cc: 54 },\n        modulateScale: { cc: 55 },\n        repeatXY: { cc: 56 },\n        colorR: { cc: 57 },\n        colorG: { cc: 58 },\n        colorB: { cc: 59 },\n        contrast: { cc: 60 },\n      },\n      switchSource: { note: 'D3' },\n      reset: { note: 'D#3' },\n    },\n    {\n      // 4\n      parameters: {\n        blend: { cc: 61 },\n        diff: { cc: 62 },\n        feedback: { cc: 63 },\n        selfModulate: { cc: 64 },\n        mod1: { cc: 65 },\n        mod2: { cc: 66 },\n        mod3: { cc: 67 },\n        brightness: { cc: 68 },\n        rotation: { cc: 69 },\n        pixelate: { cc: 70 },\n        scale: { cc: 71 },\n        colorama: { cc: 72 },\n        modulate: { cc: 73 },\n        modulateRotate: { cc: 74 },\n        modulateScale: { cc: 75 },\n        repeatXY: { cc: 76 },\n        colorR: { cc: 77 },\n        colorG: { cc: 78 },\n        colorB: { cc: 79 },\n        contrast: { cc: 80 },\n      },\n      switchSource: { note: 'C3' },\n      reset: { note: 'C#3' },\n    },\n  ],\n  keys: {\n    shift: { note: 'A7' },\n    lfo1: { note: 'B7' },\n    lfo2: { note: 'C8' },\n    audio: { note: 'A#7' },\n  },\n  presets: [\n    { note: 'C#5' },\n    { note: 'D5' },\n    { note: 'D#5' },\n    { note: 'E5' },\n    { note: 'F6' },\n    { note: 'F#6' },\n    { note: 'G6' },\n    { note: 'G#6' },\n  ],\n  lfosControl: [\n    {\n      rate: { cc: 81 },\n      type: { cc: 82 },\n    },\n    {\n      rate: { cc: 83 },\n      type: { cc: 84 },\n    },\n  ],\n};\n\nexport default config;\n","export const lfoConfig = {\n  rate: { min: 100, max: 30000 },\n};\n","import { Input } from 'rmidi';\nimport { config } from '../config/parameterConfig';\nimport { generateKeyRecord, Parameter, SourceType } from '../types';\nimport mapping from '../config/LaunchControlXL';\nimport { merge } from 'rxjs';\nimport streams, {\n  ClearParameterEvent,\n  LfoDestinationValueChange,\n  LFORateChangeEvent,\n  LFOTypeChangeEvent,\n  ParameterValueChangeEvent,\n} from './streams';\nimport { filter, map } from 'rxjs/operators';\nimport { allKeys, Key, KeyState } from '../types/Keys';\nimport { InputEventControlchange } from 'webmidi';\nimport { LFOType } from './LFO';\nimport { lfoConfig } from '../config/lfoConfig';\n\n// let input = Input.create('Launch Control XL');\n\nconst isNoteMatch = (p: { note: string; channel?: number }, e: { note: { name: any; octave: any }; channel: any }) =>\n  p.note === `${e.note.name}${e.note.octave}` && (!p.channel || p.channel === e.channel);\n\nconst keyStateMatches = (ks: KeyState, keys: Record<Key, boolean> = generateKeyRecord()): boolean => {\n  return allKeys.every((k) => keys[k] === ks[k]);\n};\n\nexport function setupMidi(\n  inputName: string,\n  getSourceType: (i: number) => SourceType,\n  keyState: KeyState\n): Promise<void> {\n  let input = Input.create(inputName);\n\n  const allParameters = Object.keys(mapping.sources[0].parameters).map((k) => k as Parameter);\n  // console.log(`===========================setupMidi`);\n\n  // listInputs();\n  return input.then((i) => {\n    // reset\n    streams.resetSource$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.reset.note, mapping.reset.channel).pipe(\n          filter(() => !keyState.audio),\n          map(() => index)\n        )\n      )\n    );\n\n    streams.selectAudioBin$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.switchSource.note, mapping.switchSource.channel).pipe(\n          filter(() => keyState.audio),\n          map(() => index)\n        )\n      )\n    );\n\n    // switchSource\n    streams.sourceTypeChange$ = merge(\n      ...mapping.sources.map((mapping, index) =>\n        i.noteOn(mapping.switchSource.note, mapping.switchSource.channel).pipe(\n          filter(() => keyStateMatches(keyState, generateKeyRecord())),\n          map(() => index)\n        )\n      )\n    );\n    const ccObservables = mapping.sources\n      .map((m, sourceIndex) =>\n        allParameters.map((p) =>\n          i.cc(m.parameters[p].cc, m.parameters[p].channel).pipe(map((e) => ({ e, sourceIndex, p, m })))\n        )\n      )\n      .flatMap((a) => a);\n\n    // LFOs\n    streams.lfoDestinationValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(\n            () =>\n              keyStateMatches(keyState, generateKeyRecord(['lfo1'])) ||\n              keyStateMatches(keyState, generateKeyRecord(['lfo2']))\n          ),\n          map(({ e, sourceIndex, p }) => {\n            const lfoIndex = keyState.lfo1 ? 0 : 1;\n            // // send LFO to param\n            const value = -1 + (2 * e.value) / 127; // between -1 and 1\n            return { value, parameter: p, sourceIndex, lfoIndex } as LfoDestinationValueChange;\n          })\n        )\n      )\n    );\n\n    // Parameter change\n    streams.parameterValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyStateMatches(keyState)),\n\n          map(({ e, sourceIndex, p }) => {\n            const {\n              min,\n              max,\n            } = // mod1/2/3 change between source types\n              p === 'mod1' || p === 'mod2' || p === 'mod3'\n                ? config.sourceMods[getSourceType(sourceIndex)][p]\n                : config.parameters[p];\n            const unit = (max - min) / 127;\n            const value = min + unit * e.value;\n            return { value, parameter: p, sourceIndex } as ParameterValueChangeEvent;\n          })\n        )\n      )\n    );\n\n    // Audio reactivity\n    streams.audioDestinationValueChange$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyState.audio && !keyState.shift),\n          map(({ e, sourceIndex, p }) => {\n            const value = e.value / 127; // between 0 and 1\n            return { value, parameter: p, sourceIndex } as LfoDestinationValueChange;\n          })\n        )\n      )\n    );\n\n    // Clear parameter\n    streams.clearParameter$ = merge(\n      ...ccObservables.map((o) =>\n        o.pipe(\n          filter(() => keyState.shift),\n          map(({ sourceIndex, p }) => {\n            const destination = keyState.lfo1 ? 'lfo1' : keyState.lfo2 ? 'lfo2' : keyState.audio ? 'audio' : null;\n            return { parameter: p, sourceIndex, destination } as ClearParameterEvent;\n          })\n        )\n      )\n    );\n    // lfo control\n    const numOfLfoTypes = Object.keys(LFOType).length / 2;\n    const divisor = 128 / numOfLfoTypes;\n    streams.lfoTypeChange$ = merge(\n      ...mapping.lfosControl.map((control, lfoIndex) =>\n        i\n          .cc(control.type.cc, control.type.channel)\n          .pipe(\n            map<InputEventControlchange, LFOTypeChangeEvent>((e) => ({ lfoIndex, type: Math.floor(e.value / divisor) }))\n          )\n      )\n    );\n\n    streams.lfoRateChange$ = merge(\n      ...mapping.lfosControl.map((control, lfoIndex) =>\n        i.cc(control.rate.cc, control.rate.channel).pipe(\n          map<InputEventControlchange, LFORateChangeEvent>((e) => ({\n            lfoIndex,\n            rate: lfoConfig.rate.min + Math.floor(((lfoConfig.rate.max - lfoConfig.rate.min) * e.value) / 127),\n          }))\n        )\n      )\n    );\n\n    // keys\n    const noteOn = i.noteOn();\n    const allKeys = Object.keys(mapping.keys).map((k) => k as Key);\n\n    streams.keyDown$ = noteOn.pipe(\n      filter((e) => allKeys.some((k) => isNoteMatch(mapping.keys[k], e))),\n      map((e) => allKeys.find((k) => isNoteMatch(mapping.keys[k], e))!)\n    );\n    streams.keyUp$ = i.noteOff().pipe(\n      filter((e) => allKeys.some((k) => isNoteMatch(mapping.keys[k], e))),\n      map((e) => allKeys.find((k) => isNoteMatch(mapping.keys[k], e))!)\n    );\n    streams.loadPreset$ = noteOn.pipe(\n      filter((e) => keyStateMatches(keyState, generateKeyRecord()) && mapping.presets.some((p) => isNoteMatch(p, e))),\n      map((e) => mapping.presets.findIndex((p) => isNoteMatch(p, e)))\n    );\n    streams.savePreset$ = noteOn.pipe(\n      filter((e) => keyStateMatches(keyState, generateKeyRecord(['shift'])) && mapping.presets.some((p) => isNoteMatch(p, e))),\n      map((e) => mapping.presets.findIndex((p) => isNoteMatch(p, e)))\n    );\n\n    // debug\n    // i.noteOn().subscribe((e) => {\n    //   console.log(`${e.note.name}${e.note.octave}`);\n    // });\n  });\n}\n","import { Parameter, SourceState, SourceType } from '../../types';\nconst defaultParams: Record<Parameter, number> = {\n  rotation: 0,\n  // kaleid: 1,\n  brightness: 0,\n  pixelate: 1500,\n  scale: 1,\n  colorama: 0,\n  modulate: 0,\n  modulateRotate: 0,\n  modulateScale: 0,\n  repeatXY: 1,\n  blend: 1,\n  diff: 0,\n  feedback: 0,\n  selfModulate: 0,\n  colorR: 1,\n  colorG: 1,\n  colorB: 1,\n  contrast: 1,\n  mod1: 0,\n  mod2: 0,\n  mod3: 0,\n};\nconst defaultSourceMods = {\n  [SourceType.osc]: {\n    mod1: 40,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.noise]: {\n    mod1: 0,\n    mod2: 0.8,\n    mod3: 0,\n  },\n  [SourceType.voronoi]: {\n    mod1: 0,\n    mod2: 0,\n    mod3: 0,\n  },\n  [SourceType.screen]: {\n    mod1: 1,\n    mod2: 0,\n    mod3: 0.01,\n  },\n  [SourceType.shape]: {\n    mod1: 3,\n    mod2: 0.3,\n    mod3: 0,\n  },\n};\nexport const generateDefaultSourceState = (sourceType: SourceType, primary: boolean = true): SourceState => {\n  const res = new SourceState(\n    {\n      ...defaultParams,\n      ...defaultSourceMods[sourceType],\n    },\n    sourceType\n  );\n  res.parameters.blend = primary ? res.parameters.blend : 0;\n  return res;\n};\n","// import gsap from 'gsap';\nimport moment from 'moment';\nimport { config, allParameters } from '../config/parameterConfig';\nimport { downloadObjectAsJson, loadFile } from '../storage';\nimport { Parameter, SourceState, SourceType, SourceTypeValues, State } from '../types';\nimport { LFO } from './LFO';\nimport run, { runAudio, runSource } from './runHydra';\nimport streams from './streams';\nimport { setupMidi } from './setupMidi';\nimport { generateDefaultSourceState } from './state/defaultSourceState';\nimport { KeyState } from '../types/Keys';\nimport { Subscription } from 'rxjs';\n\nexport class Engine {\n  subscriptions: Subscription[] = [];\n  state: State;\n  screenRatio: number = 1;\n  lfos = [new LFO(), new LFO()];\n  ranAudio = false;\n  keyState: KeyState = {\n    lfo1: false,\n    lfo2: false,\n    shift: false,\n    audio: false,\n  };\n\n  constructor() {\n    this.state = {\n      sources: [\n        generateDefaultSourceState(SourceType.osc),\n        generateDefaultSourceState(SourceType.osc, false),\n        generateDefaultSourceState(SourceType.osc, false),\n        generateDefaultSourceState(SourceType.osc, false),\n      ],\n      presets: [],\n    };\n    this.savePreset = this.savePreset.bind(this);\n    this.loadPreset = this.loadPreset.bind(this);\n  }\n  async init(): Promise<any> {\n    streams.lifecycle.settings.midiInputChanged$.subscribe((i) => this.setupMidi(i));\n  }\n  run(screenRatio?: number) {\n    if (screenRatio) {\n      this.screenRatio = screenRatio;\n    }\n    run(this.state, this.screenRatio, this.lfos);\n  }\n  randomize() {\n    allParameters.forEach((k) => {\n      if (k.startsWith('modulate')) {\n        return;\n      }\n      if (Math.random() < 0.5) {\n        const key = k as Parameter;\n        this.state.sources[0].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n        this.state.sources[1].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n        this.state.sources[2].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n        this.state.sources[3].parameters[key] =\n          Math.random() * (config.parameters[key].max - config.parameters[key].min + 1) + config.parameters[key].min;\n      }\n    });\n  }\n\n  savePreset(index: number) {\n    this.state.presets[index] = [\n      this.cloneSourceState(this.state.sources[0]),\n      this.cloneSourceState(this.state.sources[1]),\n      this.cloneSourceState(this.state.sources[2]),\n      this.cloneSourceState(this.state.sources[3]),\n    ];\n  }\n\n  loadPreset(index: number) {\n    if (!this.state.presets[index] || this.state.presets[index].length !== this.state.sources.length) {\n      return;\n    }\n    const rerun = this.state.presets[index].some((p, i) => p.sourceType !== this.state.sources[i].sourceType);\n    this.state.sources.forEach((s, i) => {\n      const preset = this.state.presets[index][i];\n      s.sourceType = preset.sourceType;\n      allParameters.forEach((p) => (s.parameters[p] = preset.parameters[p]));\n      // this polutes the prototype and causes circular errors when serializing to file\n      // gsap.to(s.parameters, {\n      //   ...preset.parameters,\n      //   duration: 0.001,\n      //   repeat: 0,\n      // });\n    });\n    if (rerun) {\n      run(this.state, this.screenRatio, this.lfos);\n    }\n  }\n\n  saveProject() {\n    downloadObjectAsJson(JSON.stringify(this.state, null, 2), moment().format('YYYY-MM-DD_hh-mm-ss'));\n  }\n\n  loadProject(file: File) {\n    loadFile(file)\n      .then((str) => {\n        try {\n          const state = JSON.parse(str) as State;\n          this.state = state;\n          run(this.state, this.screenRatio, this.lfos);\n        } catch (err) {\n          console.error('failed to parse file', err);\n        }\n      })\n      .catch((err) => {\n        console.error('failed to read file', err);\n      });\n  }\n\n  private async setupMidi(input: string) {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    if (!input) {\n      return;\n    }\n    await setupMidi(input, (i) => this.state.sources[i].sourceType, this.keyState);\n    // subscriptions\n    this.subscriptions = [\n      streams.savePreset$.subscribe((i) => this.savePreset(i)),\n      streams.loadPreset$.subscribe((i) => this.loadPreset(i)),\n      streams.sourceTypeChange$.subscribe((index) => {\n        const ss = this.state.sources[index];\n        ss.sourceType = ((Number(ss.sourceType) + 1) % SourceTypeValues.length) as SourceType;\n\n        const defaultParams = generateDefaultSourceState(ss.sourceType).parameters;\n        allParameters\n          .filter((p) => !['blend', 'diff'].includes(p))\n          .forEach((p) => (ss.parameters[p as Parameter] = defaultParams[p as Parameter]));\n        runSource(this.state, index, this.screenRatio, this.lfos);\n      }),\n      streams.keyDown$.subscribe((e) => (this.keyState[e] = true)),\n      streams.keyUp$.subscribe((e) => (this.keyState[e] = false)),\n      streams.parameterValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].parameters[e.parameter] = e.value)\n      ),\n      streams.lfoDestinationValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].lfos[e.lfoIndex][e.parameter] = e.value)\n      ),\n      streams.audioDestinationValueChange$.subscribe(\n        (e) => (this.state.sources[e.sourceIndex].audio[e.parameter] = e.value)\n      ),\n      streams.resetSource$.subscribe((index) => {\n        const ss = this.state.sources[index];\n        const defaultState = generateDefaultSourceState(ss.sourceType);\n        // copy parameters default state\n        allParameters.forEach((p) => {\n          ss.parameters[p] = defaultState.parameters[p];\n          ss.lfos.forEach((lfo) => (lfo[p] = 0));\n        });\n      }),\n      streams.clearParameter$.subscribe((e) => {\n        const ss = this.state.sources[e.sourceIndex];\n        if (e.destination === 'lfo1') {\n          ss.lfos[0][e.parameter] = 0;\n        } else if (e.destination === 'lfo2') {\n          ss.lfos[1][e.parameter] = 0;\n        } else if (e.destination === 'audio') {\n          ss.audio[e.parameter] = 0;\n        } else {\n          ss.parameters[e.parameter] = generateDefaultSourceState(ss.sourceType).parameters[e.parameter];\n        }\n      }),\n\n      streams.selectAudioBin$.subscribe((e) => {\n        if (!this.ranAudio) {\n          this.ranAudio = true;\n          runAudio();\n        }\n      }),\n\n      streams.lfoTypeChange$.subscribe((e) => (this.lfos[e.lfoIndex].type = e.type)),\n      streams.lfoRateChange$.subscribe((e) => (this.lfos[e.lfoIndex].rate = e.rate)),\n    ];\n    // console.log(`===========================engine.init end`);\n\n    streams.lifecycle.engine.initialized$.next();\n    // debug\n    // merge(\n    //   engine.scopeSubjects.sourceTypeChange,\n    //   engine.scopeSubjects.parameterChange,\n\n    //   engine.scopeSubjects.loadPreset,\n    //   engine.scopeSubjects.savePreset\n    // ).subscribe((e) => console.log(e));\n  }\n\n  private cloneSourceState(s: SourceState): SourceState {\n    return new SourceState({ ...s.parameters }, s.sourceType);\n  }\n}\n\nexport const engine = new Engine();\n","export function loadFile(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', (event) => {\n      resolve(event.target?.result as string);\n    });\n    reader.readAsText(file);\n  });\n}\n\nexport function downloadObjectAsJson(data: string, name: string) {\n  var dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(data);\n  var downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { engine } from '../engine';\nconst Hydra = require('hydra-synth');\n\nconst Canvas = styled.canvas`\n  height: 100%;\n  width: 100%;\n`;\n\nexport default () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [hasRun, setHasRun] = useState(false);\n  useEffect(() => {\n    if (canvasRef.current && !hasRun) {\n      const w = window.innerWidth;\n      const h = window.innerHeight;\n      canvasRef.current.width = w;\n      canvasRef.current.height = h;\n      const hydra = new Hydra({\n        canvas: canvasRef.current,\n        numOutputs: 5,\n        // makeGlobal: false,\n        //   precision: 'highp',\n      });\n      hydra.setResolution(w, h);\n      engine.run(w / h);\n      setHasRun(false);\n    }\n  }, [canvasRef, hasRun]);\n\n  return <Canvas id=\"hydra-canvas\" ref={canvasRef} />;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport streams from '../engine/streams';\nimport { SourceType } from '../types';\nimport { merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { engine } from '../engine';\nimport { LFOType } from '../engine/LFO';\n\nconst Container = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  bottom: 20vh;\n  font-size: 5vh;\n  text-shadow: 2px 2px 2px #111;\n  // -webkit-text-stroke-width: 2px;\n  // -webkit-text-stroke-color: #111;\n\n  .text-1 {\n    color: #dcf;\n  }\n  .text-2 {\n    color: #dfc;\n  }\n`;\nconst LFOContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n`;\nconst TextContainer = styled.div`\n  top: 66vh;\n  position: absolute;\n  margin: auto;\n  left: 0;\n  right: 0;\n`;\nconst Text = styled.div``;\nlet timers: NodeJS.Timeout[] = [];\ntype Props = {\n  enabled: boolean;\n};\nconst Scope: React.FC<Props> = ({ enabled }) => {\n  const [text1, setText1] = useState('');\n  const [text2, setText2] = useState('');\n  const [change$, setChange$] = useState<Observable<string>>();\n\n  const show = useCallback(\n    (text: string, force: boolean = false) => {\n      const index = text.startsWith('2 - ') ? 1 : 0;\n      const setText = [setText1, setText2][index];\n\n      if (!enabled && !force) {\n        return;\n      }\n      setText(text);\n      if (timers[index]) {\n        clearTimeout(timers[index]);\n      }\n      timers[index] = setTimeout(() => {\n        setText('');\n      }, 1000);\n    },\n    [setText1, setText2, enabled]\n  );\n  useEffect(() => {\n    const sub = streams.lifecycle.engine.initialized$.subscribe(() => {\n      setChange$(\n        merge(\n          streams.sourceTypeChange$.pipe(\n            map(\n              (sourceIndex) =>\n                `${sourceIndex + 1} - ${SourceType[engine.state.sources[sourceIndex].sourceType].toString()}`\n            )\n          ),\n          streams.parameterValueChange$.pipe(\n            map((e) => `${e.sourceIndex + 1} - ${e.parameter}: ${e.value.toFixed(2)}`)\n          ),\n          streams.lfoDestinationValueChange$.pipe(\n            map((e) => `${e.sourceIndex + 1} - LFO ${e.lfoIndex + 1} - ${e.parameter}: ${Math.floor(e.value * 100)}%`)\n          ),\n          streams.audioDestinationValueChange$.pipe(\n            map((e) => `${e.sourceIndex + 1} - Audio - ${e.parameter}: ${Math.floor(e.value * 100)}%`)\n          ),\n          streams.loadPreset$.pipe(map((i) => `Load preset ${i + 1}`)),\n          streams.savePreset$.pipe(map((i) => `Save preset ${i + 1}`)),\n          streams.clearParameter$.pipe(\n            map((e) => `${e.sourceIndex + 1} ${e.destination ? `- ${e.destination}` : ''}- ${e.parameter} cleared`)\n          ),\n          streams.lfoTypeChange$.pipe(map((e) => `LFO ${e.lfoIndex + 1} - ${LFOType[e.type]}`)),\n          streams.lfoRateChange$.pipe(\n            map(\n              (e) =>\n                `LFO ${e.lfoIndex + 1} - ${e.rate < 1000 ? `${e.rate} ms` : `${(e.rate / 1000).toFixed(2)} seconds`}`\n            )\n          )\n        )\n      );\n    });\n    return () => sub.unsubscribe();\n  }, []);\n  useEffect(() => {\n    const sub = change$?.subscribe(show);\n    return () => sub?.unsubscribe();\n  }, [show, change$]);\n  useEffect(() => {\n    show(`Scope ${enabled ? 'on' : 'off'}`, true);\n  }, [enabled, show]);\n\n  return (\n    <Container>\n      <TextContainer>\n        <Text className=\"text-1\">{text1}</Text>\n        <Text className=\"text-2\">{text2}</Text>\n      </TextContainer>\n      <LFOContainer>{/* <LFO value={lfo1Value} /> */}</LFOContainer>\n    </Container>\n  );\n};\nexport default Scope;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst HeaderText = styled.div`\n  font-weight: bold;\n`;\nconst Separator = styled.div`\n  height: 2px;\n  width: auto;\n  flex: 1;\n  background-color: black;\n  margin-left: 1rem;\n`;\n\nexport const SectionHeader: React.FC = (props) => (\n  <Container>\n    <HeaderText>{props.children}</HeaderText>\n    <Separator />\n  </Container>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport WebMidi from 'webmidi';\nimport { settings, storage } from '../storage';\nimport { SectionHeader } from './Settings/SectionHeader';\n\nconst Container = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: #eeeeee88;\n  padding: 20%;\n`;\n\nconst MidiInputItem = styled.div`\n  line-height: 2;\n`;\nconst MidiInputSelectionContainer = styled.div``;\nconst Settings: React.FC = () => {\n  const [selectedInput, setSelectedInput] = React.useState(storage.get(storage.keys.MIDI_INPUT));\n\n  return (\n    <Container>\n      <MidiInputSelectionContainer>\n        <SectionHeader>MIDI Input</SectionHeader>\n        {WebMidi.inputs.map((i) => (\n          <MidiInputItem key={i.name}>\n            <input\n              type=\"radio\"\n              id={i.name}\n              name=\"midi-input\"\n              value=\"HTML\"\n              checked={i.name === selectedInput}\n              onChange={() => {\n                settings.midiInput = i.name;\n                setSelectedInput(i.name);\n              }}\n            />\n            <label htmlFor={i.name}>{i.name}</label>\n          </MidiInputItem>\n        ))}\n      </MidiInputSelectionContainer>\n    </Container>\n  );\n};\n\nexport default Settings;\n","import { engine } from './engine';\nimport { init as midiInit } from 'rmidi';\nimport { settings } from './storage';\nexport default async function init() {\n  await midiInit();\n  await settings.init();\n  await engine.init();\n}\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.css';\nimport Hydra from './components/Hydra';\nimport styled from 'styled-components';\nimport { engine } from './engine/engine';\nimport Scope from './components/Scope';\nimport Settings from './components/Settings';\nimport { storage } from './storage';\nimport init from './init';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nfunction loadFile(evt: ChangeEvent<HTMLInputElement>) {\n  if (evt.target.files && evt.target.files?.length > 0) {\n    engine.loadProject(evt.target.files[0]);\n  }\n}\nconst FileDrop = styled.input`\n  display: none;\n`;\n\nfunction shouldShowSettings(): boolean {\n  if (!storage.get(storage.keys.MIDI_INPUT)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction App() {\n  const [scopeEnabled, setScopeEnabled] = useState(true);\n  const [settingsOpen, setSettingsOpen] = useState(shouldShowSettings());\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    function keyPress(evt: KeyboardEvent) {\n      const k = evt.key.toLowerCase();\n      if (k === 's') {\n        engine.saveProject();\n      } else if (k === 'l') {\n        document.getElementById('file-selector')?.click();\n      } else if (k === 'r') {\n        engine.randomize();\n      } else if (k === 'i') {\n        setScopeEnabled((enabled) => !enabled);\n      } else if (k === '`') {\n        setSettingsOpen((settingsOpen) => !settingsOpen);\n      }\n    }\n\n    window.addEventListener('keypress', keyPress);\n  }, [setScopeEnabled]);\n  useEffect(() => {\n    init().then(() => setInitialized(true));\n  }, [setInitialized]);\n  if (!initialized) {\n    return null;\n  }\n  return (\n    <Container>\n      <Hydra />\n      <Scope enabled={scopeEnabled} />\n      {settingsOpen && <Settings />}\n      <FileDrop type=\"file\" id=\"file-selector\" accept=\".json\" onChange={(e) => loadFile(e)} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}